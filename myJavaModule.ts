// myJavaModule.ts
// This file was generated by ts-java.
/// <reference path="typings/globals/java/index.d.ts" />
/// <reference path="typings/modules/lodash/index.d.ts" />

// Generated using the following tsjava options:
// tsJavaModulePath:
//   ./lib/myJavaModule.ts
// classpath:
//   build/libs/google-maps-services-java-0.1.16-SNAPSHOT.jar
//   build/libs/gson-2.3.1.jar
//   build/libs/joda-time-2.4.jar
// classes:
//   com.google.maps.DirectionsApi
//   com.google.maps.DirectionsApiRequest
//   com.google.maps.GeoApiContext
//   com.google.maps.DirectionsApi$RouteRestriction
//   com.google.maps.GeoApiContext$RequestHandler
//   com.google.maps.PendingResult$Callback
//   com.google.maps.PendingResultBase
//   com.google.gson.FieldNamingPolicy
//   com.google.maps.PendingResult
//   com.google.maps.PendingResultBase
// packages:
//   com.google.maps.model.*

/* tslint:disable:max-line-length class-name */

declare function require(name: string): any;
require('source-map-support').install();

import _java = require('java');
import _ = require('lodash');
import BluePromise = require('bluebird');
import path = require('path');

_java.asyncOptions = {
  syncSuffix: '',
  asyncSuffix: 'A',
  promiseSuffix: 'P',
  promisify: BluePromise.promisify
};

// JVM initialization callback which adds tsjava.classpath to the JVM classpath.
function beforeJvm(): BluePromise<void> {
  var moduleJars: string[] = ['build/libs/google-maps-services-java-0.1.16-SNAPSHOT.jar', 'build/libs/gson-2.3.1.jar', 'build/libs/joda-time-2.4.jar'];
  moduleJars.forEach((jarPath: string) => {
    var fullJarPath: string = path.join(__dirname, '..', jarPath);
    _java.classpath.push(fullJarPath);
  });
  return BluePromise.resolve();
}

_java.registerClientP(beforeJvm);

export module Java {
  'use strict';

  interface StringDict {
    [index: string]: string;
  }

  export type NodeJavaAPI = typeof _java;

  export function getJava(): NodeJavaAPI {
    return _java;
  }

  export function ensureJvm(): Promise<void> {
    return _java.ensureJvm();
  }


  // Return the fully qualified class path for a class name.
  // Returns undefined if the className is ambiguous or not present in the configured classes.
  export function fullyQualifiedName(className: string): string {
    var shortToLongMap: StringDict = {
      'FieldNamingPolicy': 'com.google.gson.FieldNamingPolicy',
      'DirectionsApi': 'com.google.maps.DirectionsApi',
      'DirectionsApi$RouteRestriction': 'com.google.maps.DirectionsApi$RouteRestriction',
      'DirectionsApiRequest': 'com.google.maps.DirectionsApiRequest',
      'GeoApiContext': 'com.google.maps.GeoApiContext',
      'GeoApiContext$RequestHandler': 'com.google.maps.GeoApiContext$RequestHandler',
      'AddressComponent': 'com.google.maps.model.AddressComponent',
      'AddressComponentType': 'com.google.maps.model.AddressComponentType',
      'AddressType': 'com.google.maps.model.AddressType',
      'AutocompletePrediction': 'com.google.maps.model.AutocompletePrediction',
      'AutocompletePrediction$MatchedSubstring': 'com.google.maps.model.AutocompletePrediction$MatchedSubstring',
      'AutocompletePrediction$Term': 'com.google.maps.model.AutocompletePrediction$Term',
      'Bounds': 'com.google.maps.model.Bounds',
      'ComponentFilter': 'com.google.maps.model.ComponentFilter',
      'DirectionsLeg': 'com.google.maps.model.DirectionsLeg',
      'DirectionsResult': 'com.google.maps.model.DirectionsResult',
      'DirectionsRoute': 'com.google.maps.model.DirectionsRoute',
      'DirectionsStep': 'com.google.maps.model.DirectionsStep',
      'Distance': 'com.google.maps.model.Distance',
      'DistanceMatrix': 'com.google.maps.model.DistanceMatrix',
      'DistanceMatrixElement': 'com.google.maps.model.DistanceMatrixElement',
      'DistanceMatrixElementStatus': 'com.google.maps.model.DistanceMatrixElementStatus',
      'DistanceMatrixRow': 'com.google.maps.model.DistanceMatrixRow',
      'Duration': 'com.google.maps.model.Duration',
      'ElevationResult': 'com.google.maps.model.ElevationResult',
      'EncodedPolyline': 'com.google.maps.model.EncodedPolyline',
      'Fare': 'com.google.maps.model.Fare',
      'GeocodedWaypoint': 'com.google.maps.model.GeocodedWaypoint',
      'GeocodedWaypointStatus': 'com.google.maps.model.GeocodedWaypointStatus',
      'GeocodingResult': 'com.google.maps.model.GeocodingResult',
      'Geometry': 'com.google.maps.model.Geometry',
      'LatLng': 'com.google.maps.model.LatLng',
      'LocationType': 'com.google.maps.model.LocationType',
      'OpeningHours': 'com.google.maps.model.OpeningHours',
      'OpeningHours$Period': 'com.google.maps.model.OpeningHours$Period',
      'OpeningHours$Period$OpenClose': 'com.google.maps.model.OpeningHours$Period$OpenClose',
      'OpeningHours$Period$OpenClose$DayOfWeek': 'com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek',
      'Photo': 'com.google.maps.model.Photo',
      'PhotoResult': 'com.google.maps.model.PhotoResult',
      'PlaceAutocompleteType': 'com.google.maps.model.PlaceAutocompleteType',
      'PlaceDetails': 'com.google.maps.model.PlaceDetails',
      'PlaceDetails$AlternatePlaceIds': 'com.google.maps.model.PlaceDetails$AlternatePlaceIds',
      'PlaceDetails$Review': 'com.google.maps.model.PlaceDetails$Review',
      'PlaceDetails$Review$AspectRating': 'com.google.maps.model.PlaceDetails$Review$AspectRating',
      'PlaceDetails$Review$AspectRating$RatingType': 'com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType',
      'PlaceIdScope': 'com.google.maps.model.PlaceIdScope',
      'PlacesSearchResponse': 'com.google.maps.model.PlacesSearchResponse',
      'PlacesSearchResult': 'com.google.maps.model.PlacesSearchResult',
      'PlaceType': 'com.google.maps.model.PlaceType',
      'PriceLevel': 'com.google.maps.model.PriceLevel',
      'RankBy': 'com.google.maps.model.RankBy',
      'SnappedPoint': 'com.google.maps.model.SnappedPoint',
      'SnappedSpeedLimitResponse': 'com.google.maps.model.SnappedSpeedLimitResponse',
      'SpeedLimit': 'com.google.maps.model.SpeedLimit',
      'StopDetails': 'com.google.maps.model.StopDetails',
      'TrafficModel': 'com.google.maps.model.TrafficModel',
      'TransitAgency': 'com.google.maps.model.TransitAgency',
      'TransitDetails': 'com.google.maps.model.TransitDetails',
      'TransitLine': 'com.google.maps.model.TransitLine',
      'TransitMode': 'com.google.maps.model.TransitMode',
      'TransitRoutingPreference': 'com.google.maps.model.TransitRoutingPreference',
      'TravelMode': 'com.google.maps.model.TravelMode',
      'Unit': 'com.google.maps.model.Unit',
      'Vehicle': 'com.google.maps.model.Vehicle',
      'VehicleType': 'com.google.maps.model.VehicleType',
      'PendingResult': 'com.google.maps.PendingResult',
      'PendingResult$Callback': 'com.google.maps.PendingResult$Callback',
      'Object': 'java.lang.Object',
      'String': 'java.lang.String'
    };
    return shortToLongMap[className];
  }

  export function importClass(className: 'FieldNamingPolicy'): Java.com.google.gson.FieldNamingPolicy.Static;
  export function importClass(className: 'DirectionsApi'): Java.com.google.maps.DirectionsApi.Static;
  export function importClass(className: 'DirectionsApi$RouteRestriction'): Java.com.google.maps.DirectionsApi$RouteRestriction.Static;
  export function importClass(className: 'DirectionsApiRequest'): Java.com.google.maps.DirectionsApiRequest.Static;
  export function importClass(className: 'GeoApiContext'): Java.com.google.maps.GeoApiContext.Static;
  export function importClass(className: 'GeoApiContext$RequestHandler'): Java.com.google.maps.GeoApiContext$RequestHandler.Static;
  export function importClass(className: 'AddressComponent'): Java.com.google.maps.model.AddressComponent.Static;
  export function importClass(className: 'AddressComponentType'): Java.com.google.maps.model.AddressComponentType.Static;
  export function importClass(className: 'AddressType'): Java.com.google.maps.model.AddressType.Static;
  export function importClass(className: 'AutocompletePrediction'): Java.com.google.maps.model.AutocompletePrediction.Static;
  export function importClass(className: 'AutocompletePrediction$MatchedSubstring'): Java.com.google.maps.model.AutocompletePrediction$MatchedSubstring.Static;
  export function importClass(className: 'AutocompletePrediction$Term'): Java.com.google.maps.model.AutocompletePrediction$Term.Static;
  export function importClass(className: 'Bounds'): Java.com.google.maps.model.Bounds.Static;
  export function importClass(className: 'ComponentFilter'): Java.com.google.maps.model.ComponentFilter.Static;
  export function importClass(className: 'DirectionsLeg'): Java.com.google.maps.model.DirectionsLeg.Static;
  export function importClass(className: 'DirectionsResult'): Java.com.google.maps.model.DirectionsResult.Static;
  export function importClass(className: 'DirectionsRoute'): Java.com.google.maps.model.DirectionsRoute.Static;
  export function importClass(className: 'DirectionsStep'): Java.com.google.maps.model.DirectionsStep.Static;
  export function importClass(className: 'Distance'): Java.com.google.maps.model.Distance.Static;
  export function importClass(className: 'DistanceMatrix'): Java.com.google.maps.model.DistanceMatrix.Static;
  export function importClass(className: 'DistanceMatrixElement'): Java.com.google.maps.model.DistanceMatrixElement.Static;
  export function importClass(className: 'DistanceMatrixElementStatus'): Java.com.google.maps.model.DistanceMatrixElementStatus.Static;
  export function importClass(className: 'DistanceMatrixRow'): Java.com.google.maps.model.DistanceMatrixRow.Static;
  export function importClass(className: 'Duration'): Java.com.google.maps.model.Duration.Static;
  export function importClass(className: 'ElevationResult'): Java.com.google.maps.model.ElevationResult.Static;
  export function importClass(className: 'EncodedPolyline'): Java.com.google.maps.model.EncodedPolyline.Static;
  export function importClass(className: 'Fare'): Java.com.google.maps.model.Fare.Static;
  export function importClass(className: 'GeocodedWaypoint'): Java.com.google.maps.model.GeocodedWaypoint.Static;
  export function importClass(className: 'GeocodedWaypointStatus'): Java.com.google.maps.model.GeocodedWaypointStatus.Static;
  export function importClass(className: 'GeocodingResult'): Java.com.google.maps.model.GeocodingResult.Static;
  export function importClass(className: 'Geometry'): Java.com.google.maps.model.Geometry.Static;
  export function importClass(className: 'LatLng'): Java.com.google.maps.model.LatLng.Static;
  export function importClass(className: 'LocationType'): Java.com.google.maps.model.LocationType.Static;
  export function importClass(className: 'OpeningHours'): Java.com.google.maps.model.OpeningHours.Static;
  export function importClass(className: 'OpeningHours$Period'): Java.com.google.maps.model.OpeningHours$Period.Static;
  export function importClass(className: 'OpeningHours$Period$OpenClose'): Java.com.google.maps.model.OpeningHours$Period$OpenClose.Static;
  export function importClass(className: 'OpeningHours$Period$OpenClose$DayOfWeek'): Java.com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek.Static;
  export function importClass(className: 'Photo'): Java.com.google.maps.model.Photo.Static;
  export function importClass(className: 'PhotoResult'): Java.com.google.maps.model.PhotoResult.Static;
  export function importClass(className: 'PlaceAutocompleteType'): Java.com.google.maps.model.PlaceAutocompleteType.Static;
  export function importClass(className: 'PlaceDetails'): Java.com.google.maps.model.PlaceDetails.Static;
  export function importClass(className: 'PlaceDetails$AlternatePlaceIds'): Java.com.google.maps.model.PlaceDetails$AlternatePlaceIds.Static;
  export function importClass(className: 'PlaceDetails$Review'): Java.com.google.maps.model.PlaceDetails$Review.Static;
  export function importClass(className: 'PlaceDetails$Review$AspectRating'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating.Static;
  export function importClass(className: 'PlaceDetails$Review$AspectRating$RatingType'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType.Static;
  export function importClass(className: 'PlaceIdScope'): Java.com.google.maps.model.PlaceIdScope.Static;
  export function importClass(className: 'PlacesSearchResponse'): Java.com.google.maps.model.PlacesSearchResponse.Static;
  export function importClass(className: 'PlacesSearchResult'): Java.com.google.maps.model.PlacesSearchResult.Static;
  export function importClass(className: 'PlaceType'): Java.com.google.maps.model.PlaceType.Static;
  export function importClass(className: 'PriceLevel'): Java.com.google.maps.model.PriceLevel.Static;
  export function importClass(className: 'RankBy'): Java.com.google.maps.model.RankBy.Static;
  export function importClass(className: 'SnappedPoint'): Java.com.google.maps.model.SnappedPoint.Static;
  export function importClass(className: 'SnappedSpeedLimitResponse'): Java.com.google.maps.model.SnappedSpeedLimitResponse.Static;
  export function importClass(className: 'SpeedLimit'): Java.com.google.maps.model.SpeedLimit.Static;
  export function importClass(className: 'StopDetails'): Java.com.google.maps.model.StopDetails.Static;
  export function importClass(className: 'TrafficModel'): Java.com.google.maps.model.TrafficModel.Static;
  export function importClass(className: 'TransitAgency'): Java.com.google.maps.model.TransitAgency.Static;
  export function importClass(className: 'TransitDetails'): Java.com.google.maps.model.TransitDetails.Static;
  export function importClass(className: 'TransitLine'): Java.com.google.maps.model.TransitLine.Static;
  export function importClass(className: 'TransitMode'): Java.com.google.maps.model.TransitMode.Static;
  export function importClass(className: 'TransitRoutingPreference'): Java.com.google.maps.model.TransitRoutingPreference.Static;
  export function importClass(className: 'TravelMode'): Java.com.google.maps.model.TravelMode.Static;
  export function importClass(className: 'Unit'): Java.com.google.maps.model.Unit.Static;
  export function importClass(className: 'Vehicle'): Java.com.google.maps.model.Vehicle.Static;
  export function importClass(className: 'VehicleType'): Java.com.google.maps.model.VehicleType.Static;
  export function importClass(className: 'PendingResult'): Java.com.google.maps.PendingResult.Static;
  export function importClass(className: 'PendingResult$Callback'): Java.com.google.maps.PendingResult$Callback.Static;
  export function importClass(className: 'Object'): Java.java.lang.Object.Static;
  export function importClass(className: 'String'): Java.java.lang.String.Static;
  export function importClass(className: 'com.google.gson.FieldNamingPolicy'): Java.com.google.gson.FieldNamingPolicy.Static;
  export function importClass(className: 'com.google.maps.DirectionsApi'): Java.com.google.maps.DirectionsApi.Static;
  export function importClass(className: 'com.google.maps.DirectionsApi$RouteRestriction'): Java.com.google.maps.DirectionsApi$RouteRestriction.Static;
  export function importClass(className: 'com.google.maps.DirectionsApiRequest'): Java.com.google.maps.DirectionsApiRequest.Static;
  export function importClass(className: 'com.google.maps.GeoApiContext'): Java.com.google.maps.GeoApiContext.Static;
  export function importClass(className: 'com.google.maps.GeoApiContext$RequestHandler'): Java.com.google.maps.GeoApiContext$RequestHandler.Static;
  export function importClass(className: 'com.google.maps.model.AddressComponent'): Java.com.google.maps.model.AddressComponent.Static;
  export function importClass(className: 'com.google.maps.model.AddressComponentType'): Java.com.google.maps.model.AddressComponentType.Static;
  export function importClass(className: 'com.google.maps.model.AddressType'): Java.com.google.maps.model.AddressType.Static;
  export function importClass(className: 'com.google.maps.model.AutocompletePrediction'): Java.com.google.maps.model.AutocompletePrediction.Static;
  export function importClass(className: 'com.google.maps.model.AutocompletePrediction$MatchedSubstring'): Java.com.google.maps.model.AutocompletePrediction$MatchedSubstring.Static;
  export function importClass(className: 'com.google.maps.model.AutocompletePrediction$Term'): Java.com.google.maps.model.AutocompletePrediction$Term.Static;
  export function importClass(className: 'com.google.maps.model.Bounds'): Java.com.google.maps.model.Bounds.Static;
  export function importClass(className: 'com.google.maps.model.ComponentFilter'): Java.com.google.maps.model.ComponentFilter.Static;
  export function importClass(className: 'com.google.maps.model.DirectionsLeg'): Java.com.google.maps.model.DirectionsLeg.Static;
  export function importClass(className: 'com.google.maps.model.DirectionsResult'): Java.com.google.maps.model.DirectionsResult.Static;
  export function importClass(className: 'com.google.maps.model.DirectionsRoute'): Java.com.google.maps.model.DirectionsRoute.Static;
  export function importClass(className: 'com.google.maps.model.DirectionsStep'): Java.com.google.maps.model.DirectionsStep.Static;
  export function importClass(className: 'com.google.maps.model.Distance'): Java.com.google.maps.model.Distance.Static;
  export function importClass(className: 'com.google.maps.model.DistanceMatrix'): Java.com.google.maps.model.DistanceMatrix.Static;
  export function importClass(className: 'com.google.maps.model.DistanceMatrixElement'): Java.com.google.maps.model.DistanceMatrixElement.Static;
  export function importClass(className: 'com.google.maps.model.DistanceMatrixElementStatus'): Java.com.google.maps.model.DistanceMatrixElementStatus.Static;
  export function importClass(className: 'com.google.maps.model.DistanceMatrixRow'): Java.com.google.maps.model.DistanceMatrixRow.Static;
  export function importClass(className: 'com.google.maps.model.Duration'): Java.com.google.maps.model.Duration.Static;
  export function importClass(className: 'com.google.maps.model.ElevationResult'): Java.com.google.maps.model.ElevationResult.Static;
  export function importClass(className: 'com.google.maps.model.EncodedPolyline'): Java.com.google.maps.model.EncodedPolyline.Static;
  export function importClass(className: 'com.google.maps.model.Fare'): Java.com.google.maps.model.Fare.Static;
  export function importClass(className: 'com.google.maps.model.GeocodedWaypoint'): Java.com.google.maps.model.GeocodedWaypoint.Static;
  export function importClass(className: 'com.google.maps.model.GeocodedWaypointStatus'): Java.com.google.maps.model.GeocodedWaypointStatus.Static;
  export function importClass(className: 'com.google.maps.model.GeocodingResult'): Java.com.google.maps.model.GeocodingResult.Static;
  export function importClass(className: 'com.google.maps.model.Geometry'): Java.com.google.maps.model.Geometry.Static;
  export function importClass(className: 'com.google.maps.model.LatLng'): Java.com.google.maps.model.LatLng.Static;
  export function importClass(className: 'com.google.maps.model.LocationType'): Java.com.google.maps.model.LocationType.Static;
  export function importClass(className: 'com.google.maps.model.OpeningHours'): Java.com.google.maps.model.OpeningHours.Static;
  export function importClass(className: 'com.google.maps.model.OpeningHours$Period'): Java.com.google.maps.model.OpeningHours$Period.Static;
  export function importClass(className: 'com.google.maps.model.OpeningHours$Period$OpenClose'): Java.com.google.maps.model.OpeningHours$Period$OpenClose.Static;
  export function importClass(className: 'com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek'): Java.com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek.Static;
  export function importClass(className: 'com.google.maps.model.Photo'): Java.com.google.maps.model.Photo.Static;
  export function importClass(className: 'com.google.maps.model.PhotoResult'): Java.com.google.maps.model.PhotoResult.Static;
  export function importClass(className: 'com.google.maps.model.PlaceAutocompleteType'): Java.com.google.maps.model.PlaceAutocompleteType.Static;
  export function importClass(className: 'com.google.maps.model.PlaceDetails'): Java.com.google.maps.model.PlaceDetails.Static;
  export function importClass(className: 'com.google.maps.model.PlaceDetails$AlternatePlaceIds'): Java.com.google.maps.model.PlaceDetails$AlternatePlaceIds.Static;
  export function importClass(className: 'com.google.maps.model.PlaceDetails$Review'): Java.com.google.maps.model.PlaceDetails$Review.Static;
  export function importClass(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating.Static;
  export function importClass(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType.Static;
  export function importClass(className: 'com.google.maps.model.PlaceIdScope'): Java.com.google.maps.model.PlaceIdScope.Static;
  export function importClass(className: 'com.google.maps.model.PlacesSearchResponse'): Java.com.google.maps.model.PlacesSearchResponse.Static;
  export function importClass(className: 'com.google.maps.model.PlacesSearchResult'): Java.com.google.maps.model.PlacesSearchResult.Static;
  export function importClass(className: 'com.google.maps.model.PlaceType'): Java.com.google.maps.model.PlaceType.Static;
  export function importClass(className: 'com.google.maps.model.PriceLevel'): Java.com.google.maps.model.PriceLevel.Static;
  export function importClass(className: 'com.google.maps.model.RankBy'): Java.com.google.maps.model.RankBy.Static;
  export function importClass(className: 'com.google.maps.model.SnappedPoint'): Java.com.google.maps.model.SnappedPoint.Static;
  export function importClass(className: 'com.google.maps.model.SnappedSpeedLimitResponse'): Java.com.google.maps.model.SnappedSpeedLimitResponse.Static;
  export function importClass(className: 'com.google.maps.model.SpeedLimit'): Java.com.google.maps.model.SpeedLimit.Static;
  export function importClass(className: 'com.google.maps.model.StopDetails'): Java.com.google.maps.model.StopDetails.Static;
  export function importClass(className: 'com.google.maps.model.TrafficModel'): Java.com.google.maps.model.TrafficModel.Static;
  export function importClass(className: 'com.google.maps.model.TransitAgency'): Java.com.google.maps.model.TransitAgency.Static;
  export function importClass(className: 'com.google.maps.model.TransitDetails'): Java.com.google.maps.model.TransitDetails.Static;
  export function importClass(className: 'com.google.maps.model.TransitLine'): Java.com.google.maps.model.TransitLine.Static;
  export function importClass(className: 'com.google.maps.model.TransitMode'): Java.com.google.maps.model.TransitMode.Static;
  export function importClass(className: 'com.google.maps.model.TransitRoutingPreference'): Java.com.google.maps.model.TransitRoutingPreference.Static;
  export function importClass(className: 'com.google.maps.model.TravelMode'): Java.com.google.maps.model.TravelMode.Static;
  export function importClass(className: 'com.google.maps.model.Unit'): Java.com.google.maps.model.Unit.Static;
  export function importClass(className: 'com.google.maps.model.Vehicle'): Java.com.google.maps.model.Vehicle.Static;
  export function importClass(className: 'com.google.maps.model.VehicleType'): Java.com.google.maps.model.VehicleType.Static;
  export function importClass(className: 'com.google.maps.PendingResult'): Java.com.google.maps.PendingResult.Static;
  export function importClass(className: 'com.google.maps.PendingResult$Callback'): Java.com.google.maps.PendingResult$Callback.Static;
  export function importClass(className: 'java.lang.Object'): Java.java.lang.Object.Static;
  export function importClass(className: 'java.lang.String'): Java.java.lang.String.Static;
  export function importClass(className: string): any;
  export function importClass(className: string): any {
    var fullName: string = fullyQualifiedName(className) || className;
    return _java.import(fullName);
  }

  export function asInstanceOf(obj: any, className: 'FieldNamingPolicy'): Java.com.google.gson.FieldNamingPolicy;
  export function asInstanceOf(obj: any, className: 'DirectionsApi'): Java.com.google.maps.DirectionsApi;
  export function asInstanceOf(obj: any, className: 'DirectionsApi$RouteRestriction'): Java.com.google.maps.DirectionsApi$RouteRestriction;
  export function asInstanceOf(obj: any, className: 'DirectionsApiRequest'): Java.com.google.maps.DirectionsApiRequest;
  export function asInstanceOf(obj: any, className: 'GeoApiContext'): Java.com.google.maps.GeoApiContext;
  export function asInstanceOf(obj: any, className: 'GeoApiContext$RequestHandler'): Java.com.google.maps.GeoApiContext$RequestHandler;
  export function asInstanceOf(obj: any, className: 'AddressComponent'): Java.com.google.maps.model.AddressComponent;
  export function asInstanceOf(obj: any, className: 'AddressComponentType'): Java.com.google.maps.model.AddressComponentType;
  export function asInstanceOf(obj: any, className: 'AddressType'): Java.com.google.maps.model.AddressType;
  export function asInstanceOf(obj: any, className: 'AutocompletePrediction'): Java.com.google.maps.model.AutocompletePrediction;
  export function asInstanceOf(obj: any, className: 'AutocompletePrediction$MatchedSubstring'): Java.com.google.maps.model.AutocompletePrediction$MatchedSubstring;
  export function asInstanceOf(obj: any, className: 'AutocompletePrediction$Term'): Java.com.google.maps.model.AutocompletePrediction$Term;
  export function asInstanceOf(obj: any, className: 'Bounds'): Java.com.google.maps.model.Bounds;
  export function asInstanceOf(obj: any, className: 'ComponentFilter'): Java.com.google.maps.model.ComponentFilter;
  export function asInstanceOf(obj: any, className: 'DirectionsLeg'): Java.com.google.maps.model.DirectionsLeg;
  export function asInstanceOf(obj: any, className: 'DirectionsResult'): Java.com.google.maps.model.DirectionsResult;
  export function asInstanceOf(obj: any, className: 'DirectionsRoute'): Java.com.google.maps.model.DirectionsRoute;
  export function asInstanceOf(obj: any, className: 'DirectionsStep'): Java.com.google.maps.model.DirectionsStep;
  export function asInstanceOf(obj: any, className: 'Distance'): Java.com.google.maps.model.Distance;
  export function asInstanceOf(obj: any, className: 'DistanceMatrix'): Java.com.google.maps.model.DistanceMatrix;
  export function asInstanceOf(obj: any, className: 'DistanceMatrixElement'): Java.com.google.maps.model.DistanceMatrixElement;
  export function asInstanceOf(obj: any, className: 'DistanceMatrixElementStatus'): Java.com.google.maps.model.DistanceMatrixElementStatus;
  export function asInstanceOf(obj: any, className: 'DistanceMatrixRow'): Java.com.google.maps.model.DistanceMatrixRow;
  export function asInstanceOf(obj: any, className: 'Duration'): Java.com.google.maps.model.Duration;
  export function asInstanceOf(obj: any, className: 'ElevationResult'): Java.com.google.maps.model.ElevationResult;
  export function asInstanceOf(obj: any, className: 'EncodedPolyline'): Java.com.google.maps.model.EncodedPolyline;
  export function asInstanceOf(obj: any, className: 'Fare'): Java.com.google.maps.model.Fare;
  export function asInstanceOf(obj: any, className: 'GeocodedWaypoint'): Java.com.google.maps.model.GeocodedWaypoint;
  export function asInstanceOf(obj: any, className: 'GeocodedWaypointStatus'): Java.com.google.maps.model.GeocodedWaypointStatus;
  export function asInstanceOf(obj: any, className: 'GeocodingResult'): Java.com.google.maps.model.GeocodingResult;
  export function asInstanceOf(obj: any, className: 'Geometry'): Java.com.google.maps.model.Geometry;
  export function asInstanceOf(obj: any, className: 'LatLng'): Java.com.google.maps.model.LatLng;
  export function asInstanceOf(obj: any, className: 'LocationType'): Java.com.google.maps.model.LocationType;
  export function asInstanceOf(obj: any, className: 'OpeningHours'): Java.com.google.maps.model.OpeningHours;
  export function asInstanceOf(obj: any, className: 'OpeningHours$Period'): Java.com.google.maps.model.OpeningHours$Period;
  export function asInstanceOf(obj: any, className: 'OpeningHours$Period$OpenClose'): Java.com.google.maps.model.OpeningHours$Period$OpenClose;
  export function asInstanceOf(obj: any, className: 'OpeningHours$Period$OpenClose$DayOfWeek'): Java.com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek;
  export function asInstanceOf(obj: any, className: 'Photo'): Java.com.google.maps.model.Photo;
  export function asInstanceOf(obj: any, className: 'PhotoResult'): Java.com.google.maps.model.PhotoResult;
  export function asInstanceOf(obj: any, className: 'PlaceAutocompleteType'): Java.com.google.maps.model.PlaceAutocompleteType;
  export function asInstanceOf(obj: any, className: 'PlaceDetails'): Java.com.google.maps.model.PlaceDetails;
  export function asInstanceOf(obj: any, className: 'PlaceDetails$AlternatePlaceIds'): Java.com.google.maps.model.PlaceDetails$AlternatePlaceIds;
  export function asInstanceOf(obj: any, className: 'PlaceDetails$Review'): Java.com.google.maps.model.PlaceDetails$Review;
  export function asInstanceOf(obj: any, className: 'PlaceDetails$Review$AspectRating'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating;
  export function asInstanceOf(obj: any, className: 'PlaceDetails$Review$AspectRating$RatingType'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType;
  export function asInstanceOf(obj: any, className: 'PlaceIdScope'): Java.com.google.maps.model.PlaceIdScope;
  export function asInstanceOf(obj: any, className: 'PlacesSearchResponse'): Java.com.google.maps.model.PlacesSearchResponse;
  export function asInstanceOf(obj: any, className: 'PlacesSearchResult'): Java.com.google.maps.model.PlacesSearchResult;
  export function asInstanceOf(obj: any, className: 'PlaceType'): Java.com.google.maps.model.PlaceType;
  export function asInstanceOf(obj: any, className: 'PriceLevel'): Java.com.google.maps.model.PriceLevel;
  export function asInstanceOf(obj: any, className: 'RankBy'): Java.com.google.maps.model.RankBy;
  export function asInstanceOf(obj: any, className: 'SnappedPoint'): Java.com.google.maps.model.SnappedPoint;
  export function asInstanceOf(obj: any, className: 'SnappedSpeedLimitResponse'): Java.com.google.maps.model.SnappedSpeedLimitResponse;
  export function asInstanceOf(obj: any, className: 'SpeedLimit'): Java.com.google.maps.model.SpeedLimit;
  export function asInstanceOf(obj: any, className: 'StopDetails'): Java.com.google.maps.model.StopDetails;
  export function asInstanceOf(obj: any, className: 'TrafficModel'): Java.com.google.maps.model.TrafficModel;
  export function asInstanceOf(obj: any, className: 'TransitAgency'): Java.com.google.maps.model.TransitAgency;
  export function asInstanceOf(obj: any, className: 'TransitDetails'): Java.com.google.maps.model.TransitDetails;
  export function asInstanceOf(obj: any, className: 'TransitLine'): Java.com.google.maps.model.TransitLine;
  export function asInstanceOf(obj: any, className: 'TransitMode'): Java.com.google.maps.model.TransitMode;
  export function asInstanceOf(obj: any, className: 'TransitRoutingPreference'): Java.com.google.maps.model.TransitRoutingPreference;
  export function asInstanceOf(obj: any, className: 'TravelMode'): Java.com.google.maps.model.TravelMode;
  export function asInstanceOf(obj: any, className: 'Unit'): Java.com.google.maps.model.Unit;
  export function asInstanceOf(obj: any, className: 'Vehicle'): Java.com.google.maps.model.Vehicle;
  export function asInstanceOf(obj: any, className: 'VehicleType'): Java.com.google.maps.model.VehicleType;
  export function asInstanceOf(obj: any, className: 'PendingResult'): Java.com.google.maps.PendingResult;
  export function asInstanceOf(obj: any, className: 'PendingResult$Callback'): Java.com.google.maps.PendingResult$Callback;
  export function asInstanceOf(obj: any, className: 'Object'): Java.java.lang.Object;
  export function asInstanceOf(obj: any, className: 'String'): Java.java.lang.String;
  export function asInstanceOf(obj: any, className: 'com.google.gson.FieldNamingPolicy'): Java.com.google.gson.FieldNamingPolicy;
  export function asInstanceOf(obj: any, className: 'com.google.maps.DirectionsApi'): Java.com.google.maps.DirectionsApi;
  export function asInstanceOf(obj: any, className: 'com.google.maps.DirectionsApi$RouteRestriction'): Java.com.google.maps.DirectionsApi$RouteRestriction;
  export function asInstanceOf(obj: any, className: 'com.google.maps.DirectionsApiRequest'): Java.com.google.maps.DirectionsApiRequest;
  export function asInstanceOf(obj: any, className: 'com.google.maps.GeoApiContext'): Java.com.google.maps.GeoApiContext;
  export function asInstanceOf(obj: any, className: 'com.google.maps.GeoApiContext$RequestHandler'): Java.com.google.maps.GeoApiContext$RequestHandler;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.AddressComponent'): Java.com.google.maps.model.AddressComponent;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.AddressComponentType'): Java.com.google.maps.model.AddressComponentType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.AddressType'): Java.com.google.maps.model.AddressType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.AutocompletePrediction'): Java.com.google.maps.model.AutocompletePrediction;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.AutocompletePrediction$MatchedSubstring'): Java.com.google.maps.model.AutocompletePrediction$MatchedSubstring;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.AutocompletePrediction$Term'): Java.com.google.maps.model.AutocompletePrediction$Term;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Bounds'): Java.com.google.maps.model.Bounds;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.ComponentFilter'): Java.com.google.maps.model.ComponentFilter;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DirectionsLeg'): Java.com.google.maps.model.DirectionsLeg;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DirectionsResult'): Java.com.google.maps.model.DirectionsResult;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DirectionsRoute'): Java.com.google.maps.model.DirectionsRoute;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DirectionsStep'): Java.com.google.maps.model.DirectionsStep;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Distance'): Java.com.google.maps.model.Distance;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DistanceMatrix'): Java.com.google.maps.model.DistanceMatrix;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DistanceMatrixElement'): Java.com.google.maps.model.DistanceMatrixElement;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DistanceMatrixElementStatus'): Java.com.google.maps.model.DistanceMatrixElementStatus;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.DistanceMatrixRow'): Java.com.google.maps.model.DistanceMatrixRow;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Duration'): Java.com.google.maps.model.Duration;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.ElevationResult'): Java.com.google.maps.model.ElevationResult;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.EncodedPolyline'): Java.com.google.maps.model.EncodedPolyline;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Fare'): Java.com.google.maps.model.Fare;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.GeocodedWaypoint'): Java.com.google.maps.model.GeocodedWaypoint;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.GeocodedWaypointStatus'): Java.com.google.maps.model.GeocodedWaypointStatus;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.GeocodingResult'): Java.com.google.maps.model.GeocodingResult;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Geometry'): Java.com.google.maps.model.Geometry;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.LatLng'): Java.com.google.maps.model.LatLng;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.LocationType'): Java.com.google.maps.model.LocationType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.OpeningHours'): Java.com.google.maps.model.OpeningHours;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.OpeningHours$Period'): Java.com.google.maps.model.OpeningHours$Period;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.OpeningHours$Period$OpenClose'): Java.com.google.maps.model.OpeningHours$Period$OpenClose;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek'): Java.com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Photo'): Java.com.google.maps.model.Photo;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PhotoResult'): Java.com.google.maps.model.PhotoResult;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceAutocompleteType'): Java.com.google.maps.model.PlaceAutocompleteType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceDetails'): Java.com.google.maps.model.PlaceDetails;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceDetails$AlternatePlaceIds'): Java.com.google.maps.model.PlaceDetails$AlternatePlaceIds;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceDetails$Review'): Java.com.google.maps.model.PlaceDetails$Review;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceDetails$Review$AspectRating'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType'): Java.com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceIdScope'): Java.com.google.maps.model.PlaceIdScope;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlacesSearchResponse'): Java.com.google.maps.model.PlacesSearchResponse;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlacesSearchResult'): Java.com.google.maps.model.PlacesSearchResult;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PlaceType'): Java.com.google.maps.model.PlaceType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.PriceLevel'): Java.com.google.maps.model.PriceLevel;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.RankBy'): Java.com.google.maps.model.RankBy;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.SnappedPoint'): Java.com.google.maps.model.SnappedPoint;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.SnappedSpeedLimitResponse'): Java.com.google.maps.model.SnappedSpeedLimitResponse;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.SpeedLimit'): Java.com.google.maps.model.SpeedLimit;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.StopDetails'): Java.com.google.maps.model.StopDetails;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TrafficModel'): Java.com.google.maps.model.TrafficModel;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TransitAgency'): Java.com.google.maps.model.TransitAgency;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TransitDetails'): Java.com.google.maps.model.TransitDetails;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TransitLine'): Java.com.google.maps.model.TransitLine;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TransitMode'): Java.com.google.maps.model.TransitMode;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TransitRoutingPreference'): Java.com.google.maps.model.TransitRoutingPreference;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.TravelMode'): Java.com.google.maps.model.TravelMode;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Unit'): Java.com.google.maps.model.Unit;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.Vehicle'): Java.com.google.maps.model.Vehicle;
  export function asInstanceOf(obj: any, className: 'com.google.maps.model.VehicleType'): Java.com.google.maps.model.VehicleType;
  export function asInstanceOf(obj: any, className: 'com.google.maps.PendingResult'): Java.com.google.maps.PendingResult;
  export function asInstanceOf(obj: any, className: 'com.google.maps.PendingResult$Callback'): Java.com.google.maps.PendingResult$Callback;
  export function asInstanceOf(obj: any, className: 'java.lang.Object'): Java.java.lang.Object;
  export function asInstanceOf(obj: any, className: 'java.lang.String'): Java.java.lang.String;
  export function asInstanceOf(obj: any, className: string): any;
  export function asInstanceOf(obj: any, className: string): any {
    var fullName: string = fullyQualifiedName(className) || className;
    if (_java.instanceOf(obj, fullName)) {
      return obj;
    } else {
      throw new Error('asInstanceOf fails, obj is not a ' + fullName);
    }
  }

  export interface Callback<T> {
    (err?: Error, result?: T): void;
  }

  // Returns true if javaObject is an instance of the named class, which may be a short className.
  // Returns false if javaObject is not an instance of the named class.
  // Throws an exception if the named class does not exist, or is an ambiguous short name.
  export function instanceOf(javaObject: any, className: string): boolean {
    var fullName: string = fullyQualifiedName(className) || className;
    return smellsLikeJavaObject(javaObject) && _java.instanceOf(javaObject, fullName);
  }






  export function newInstanceA(className: 'GeoApiContext', arg0: Java.GeoApiContext$RequestHandler, cb: Callback<Java.GeoApiContext>): void;
  export function newInstanceA(className: 'GeoApiContext', cb: Callback<Java.GeoApiContext>): void;
  export function newInstanceA(className: 'AddressComponent', cb: Callback<Java.AddressComponent>): void;
  export function newInstanceA(className: 'AutocompletePrediction', cb: Callback<Java.AutocompletePrediction>): void;
  export function newInstanceA(className: 'AutocompletePrediction$MatchedSubstring', cb: Callback<Java.AutocompletePrediction$MatchedSubstring>): void;
  export function newInstanceA(className: 'AutocompletePrediction$Term', cb: Callback<Java.AutocompletePrediction$Term>): void;
  export function newInstanceA(className: 'Bounds', cb: Callback<Java.Bounds>): void;
  export function newInstanceA(className: 'DirectionsLeg', cb: Callback<Java.DirectionsLeg>): void;
  export function newInstanceA(className: 'DirectionsResult', cb: Callback<Java.DirectionsResult>): void;
  export function newInstanceA(className: 'DirectionsRoute', cb: Callback<Java.DirectionsRoute>): void;
  export function newInstanceA(className: 'DirectionsStep', cb: Callback<Java.DirectionsStep>): void;
  export function newInstanceA(className: 'Distance', cb: Callback<Java.Distance>): void;
  export function newInstanceA(className: 'DistanceMatrix', arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>, cb: Callback<Java.DistanceMatrix>): void;
  export function newInstanceA(className: 'DistanceMatrixElement', cb: Callback<Java.DistanceMatrixElement>): void;
  export function newInstanceA(className: 'DistanceMatrixRow', cb: Callback<Java.DistanceMatrixRow>): void;
  export function newInstanceA(className: 'Duration', cb: Callback<Java.Duration>): void;
  export function newInstanceA(className: 'ElevationResult', cb: Callback<Java.ElevationResult>): void;
  export function newInstanceA(className: 'EncodedPolyline', arg0: string_t, cb: Callback<Java.EncodedPolyline>): void;
  export function newInstanceA(className: 'EncodedPolyline', arg0: object_t, cb: Callback<Java.EncodedPolyline>): void;
  export function newInstanceA(className: 'Fare', cb: Callback<Java.Fare>): void;
  export function newInstanceA(className: 'GeocodedWaypoint', cb: Callback<Java.GeocodedWaypoint>): void;
  export function newInstanceA(className: 'GeocodingResult', cb: Callback<Java.GeocodingResult>): void;
  export function newInstanceA(className: 'Geometry', cb: Callback<Java.Geometry>): void;
  export function newInstanceA(className: 'LatLng', arg0: object_t, arg1: object_t, cb: Callback<Java.LatLng>): void;
  export function newInstanceA(className: 'OpeningHours', cb: Callback<Java.OpeningHours>): void;
  export function newInstanceA(className: 'OpeningHours$Period', cb: Callback<Java.OpeningHours$Period>): void;
  export function newInstanceA(className: 'OpeningHours$Period$OpenClose', cb: Callback<Java.OpeningHours$Period$OpenClose>): void;
  export function newInstanceA(className: 'Photo', cb: Callback<Java.Photo>): void;
  export function newInstanceA(className: 'PhotoResult', cb: Callback<Java.PhotoResult>): void;
  export function newInstanceA(className: 'PlaceDetails', cb: Callback<Java.PlaceDetails>): void;
  export function newInstanceA(className: 'PlaceDetails$AlternatePlaceIds', cb: Callback<Java.PlaceDetails$AlternatePlaceIds>): void;
  export function newInstanceA(className: 'PlaceDetails$Review', cb: Callback<Java.PlaceDetails$Review>): void;
  export function newInstanceA(className: 'PlaceDetails$Review$AspectRating', cb: Callback<Java.PlaceDetails$Review$AspectRating>): void;
  export function newInstanceA(className: 'PlacesSearchResponse', cb: Callback<Java.PlacesSearchResponse>): void;
  export function newInstanceA(className: 'PlacesSearchResult', cb: Callback<Java.PlacesSearchResult>): void;
  export function newInstanceA(className: 'SnappedPoint', cb: Callback<Java.SnappedPoint>): void;
  export function newInstanceA(className: 'SnappedSpeedLimitResponse', cb: Callback<Java.SnappedSpeedLimitResponse>): void;
  export function newInstanceA(className: 'SpeedLimit', cb: Callback<Java.SpeedLimit>): void;
  export function newInstanceA(className: 'StopDetails', cb: Callback<Java.StopDetails>): void;
  export function newInstanceA(className: 'TransitAgency', cb: Callback<Java.TransitAgency>): void;
  export function newInstanceA(className: 'TransitDetails', cb: Callback<Java.TransitDetails>): void;
  export function newInstanceA(className: 'TransitLine', cb: Callback<Java.TransitLine>): void;
  export function newInstanceA(className: 'Vehicle', cb: Callback<Java.Vehicle>): void;
  export function newInstanceA(className: 'Object', cb: Callback<object_t>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: string_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, arg1: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: string_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', arg0: object_array_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'String', cb: Callback<string>): void;
  export function newInstanceA(className: 'com.google.maps.GeoApiContext', arg0: Java.GeoApiContext$RequestHandler, cb: Callback<Java.GeoApiContext>): void;
  export function newInstanceA(className: 'com.google.maps.GeoApiContext', cb: Callback<Java.GeoApiContext>): void;
  export function newInstanceA(className: 'com.google.maps.model.AddressComponent', cb: Callback<Java.AddressComponent>): void;
  export function newInstanceA(className: 'com.google.maps.model.AutocompletePrediction', cb: Callback<Java.AutocompletePrediction>): void;
  export function newInstanceA(className: 'com.google.maps.model.AutocompletePrediction$MatchedSubstring', cb: Callback<Java.AutocompletePrediction$MatchedSubstring>): void;
  export function newInstanceA(className: 'com.google.maps.model.AutocompletePrediction$Term', cb: Callback<Java.AutocompletePrediction$Term>): void;
  export function newInstanceA(className: 'com.google.maps.model.Bounds', cb: Callback<Java.Bounds>): void;
  export function newInstanceA(className: 'com.google.maps.model.DirectionsLeg', cb: Callback<Java.DirectionsLeg>): void;
  export function newInstanceA(className: 'com.google.maps.model.DirectionsResult', cb: Callback<Java.DirectionsResult>): void;
  export function newInstanceA(className: 'com.google.maps.model.DirectionsRoute', cb: Callback<Java.DirectionsRoute>): void;
  export function newInstanceA(className: 'com.google.maps.model.DirectionsStep', cb: Callback<Java.DirectionsStep>): void;
  export function newInstanceA(className: 'com.google.maps.model.Distance', cb: Callback<Java.Distance>): void;
  export function newInstanceA(className: 'com.google.maps.model.DistanceMatrix', arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>, cb: Callback<Java.DistanceMatrix>): void;
  export function newInstanceA(className: 'com.google.maps.model.DistanceMatrixElement', cb: Callback<Java.DistanceMatrixElement>): void;
  export function newInstanceA(className: 'com.google.maps.model.DistanceMatrixRow', cb: Callback<Java.DistanceMatrixRow>): void;
  export function newInstanceA(className: 'com.google.maps.model.Duration', cb: Callback<Java.Duration>): void;
  export function newInstanceA(className: 'com.google.maps.model.ElevationResult', cb: Callback<Java.ElevationResult>): void;
  export function newInstanceA(className: 'com.google.maps.model.EncodedPolyline', arg0: string_t, cb: Callback<Java.EncodedPolyline>): void;
  export function newInstanceA(className: 'com.google.maps.model.EncodedPolyline', arg0: object_t, cb: Callback<Java.EncodedPolyline>): void;
  export function newInstanceA(className: 'com.google.maps.model.Fare', cb: Callback<Java.Fare>): void;
  export function newInstanceA(className: 'com.google.maps.model.GeocodedWaypoint', cb: Callback<Java.GeocodedWaypoint>): void;
  export function newInstanceA(className: 'com.google.maps.model.GeocodingResult', cb: Callback<Java.GeocodingResult>): void;
  export function newInstanceA(className: 'com.google.maps.model.Geometry', cb: Callback<Java.Geometry>): void;
  export function newInstanceA(className: 'com.google.maps.model.LatLng', arg0: object_t, arg1: object_t, cb: Callback<Java.LatLng>): void;
  export function newInstanceA(className: 'com.google.maps.model.OpeningHours', cb: Callback<Java.OpeningHours>): void;
  export function newInstanceA(className: 'com.google.maps.model.OpeningHours$Period', cb: Callback<Java.OpeningHours$Period>): void;
  export function newInstanceA(className: 'com.google.maps.model.OpeningHours$Period$OpenClose', cb: Callback<Java.OpeningHours$Period$OpenClose>): void;
  export function newInstanceA(className: 'com.google.maps.model.Photo', cb: Callback<Java.Photo>): void;
  export function newInstanceA(className: 'com.google.maps.model.PhotoResult', cb: Callback<Java.PhotoResult>): void;
  export function newInstanceA(className: 'com.google.maps.model.PlaceDetails', cb: Callback<Java.PlaceDetails>): void;
  export function newInstanceA(className: 'com.google.maps.model.PlaceDetails$AlternatePlaceIds', cb: Callback<Java.PlaceDetails$AlternatePlaceIds>): void;
  export function newInstanceA(className: 'com.google.maps.model.PlaceDetails$Review', cb: Callback<Java.PlaceDetails$Review>): void;
  export function newInstanceA(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating', cb: Callback<Java.PlaceDetails$Review$AspectRating>): void;
  export function newInstanceA(className: 'com.google.maps.model.PlacesSearchResponse', cb: Callback<Java.PlacesSearchResponse>): void;
  export function newInstanceA(className: 'com.google.maps.model.PlacesSearchResult', cb: Callback<Java.PlacesSearchResult>): void;
  export function newInstanceA(className: 'com.google.maps.model.SnappedPoint', cb: Callback<Java.SnappedPoint>): void;
  export function newInstanceA(className: 'com.google.maps.model.SnappedSpeedLimitResponse', cb: Callback<Java.SnappedSpeedLimitResponse>): void;
  export function newInstanceA(className: 'com.google.maps.model.SpeedLimit', cb: Callback<Java.SpeedLimit>): void;
  export function newInstanceA(className: 'com.google.maps.model.StopDetails', cb: Callback<Java.StopDetails>): void;
  export function newInstanceA(className: 'com.google.maps.model.TransitAgency', cb: Callback<Java.TransitAgency>): void;
  export function newInstanceA(className: 'com.google.maps.model.TransitDetails', cb: Callback<Java.TransitDetails>): void;
  export function newInstanceA(className: 'com.google.maps.model.TransitLine', cb: Callback<Java.TransitLine>): void;
  export function newInstanceA(className: 'com.google.maps.model.Vehicle', cb: Callback<Java.Vehicle>): void;
  export function newInstanceA(className: 'java.lang.Object', cb: Callback<object_t>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: string_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: string_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', arg0: object_array_t, cb: Callback<string>): void;
  export function newInstanceA(className: 'java.lang.String', cb: Callback<string>): void;
  export function newInstanceA(className: string, ...args: any[]): void;
  export function newInstanceA(className: string, ...args: any[]): any {
    var fullName: string = fullyQualifiedName(className) || className;
    args.unshift(fullName);
    return _java.newInstance.apply(_java, args);
  }

  export function newInstance(className: 'GeoApiContext', arg0: Java.GeoApiContext$RequestHandler): Java.GeoApiContext;
  export function newInstance(className: 'GeoApiContext'): Java.GeoApiContext;
  export function newInstance(className: 'AddressComponent'): Java.AddressComponent;
  export function newInstance(className: 'AutocompletePrediction'): Java.AutocompletePrediction;
  export function newInstance(className: 'AutocompletePrediction$MatchedSubstring'): Java.AutocompletePrediction$MatchedSubstring;
  export function newInstance(className: 'AutocompletePrediction$Term'): Java.AutocompletePrediction$Term;
  export function newInstance(className: 'Bounds'): Java.Bounds;
  export function newInstance(className: 'DirectionsLeg'): Java.DirectionsLeg;
  export function newInstance(className: 'DirectionsResult'): Java.DirectionsResult;
  export function newInstance(className: 'DirectionsRoute'): Java.DirectionsRoute;
  export function newInstance(className: 'DirectionsStep'): Java.DirectionsStep;
  export function newInstance(className: 'Distance'): Java.Distance;
  export function newInstance(className: 'DistanceMatrix', arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>): Java.DistanceMatrix;
  export function newInstance(className: 'DistanceMatrixElement'): Java.DistanceMatrixElement;
  export function newInstance(className: 'DistanceMatrixRow'): Java.DistanceMatrixRow;
  export function newInstance(className: 'Duration'): Java.Duration;
  export function newInstance(className: 'ElevationResult'): Java.ElevationResult;
  export function newInstance(className: 'EncodedPolyline', arg0: string_t): Java.EncodedPolyline;
  export function newInstance(className: 'EncodedPolyline', arg0: object_t): Java.EncodedPolyline;
  export function newInstance(className: 'Fare'): Java.Fare;
  export function newInstance(className: 'GeocodedWaypoint'): Java.GeocodedWaypoint;
  export function newInstance(className: 'GeocodingResult'): Java.GeocodingResult;
  export function newInstance(className: 'Geometry'): Java.Geometry;
  export function newInstance(className: 'LatLng', arg0: object_t, arg1: object_t): Java.LatLng;
  export function newInstance(className: 'OpeningHours'): Java.OpeningHours;
  export function newInstance(className: 'OpeningHours$Period'): Java.OpeningHours$Period;
  export function newInstance(className: 'OpeningHours$Period$OpenClose'): Java.OpeningHours$Period$OpenClose;
  export function newInstance(className: 'Photo'): Java.Photo;
  export function newInstance(className: 'PhotoResult'): Java.PhotoResult;
  export function newInstance(className: 'PlaceDetails'): Java.PlaceDetails;
  export function newInstance(className: 'PlaceDetails$AlternatePlaceIds'): Java.PlaceDetails$AlternatePlaceIds;
  export function newInstance(className: 'PlaceDetails$Review'): Java.PlaceDetails$Review;
  export function newInstance(className: 'PlaceDetails$Review$AspectRating'): Java.PlaceDetails$Review$AspectRating;
  export function newInstance(className: 'PlacesSearchResponse'): Java.PlacesSearchResponse;
  export function newInstance(className: 'PlacesSearchResult'): Java.PlacesSearchResult;
  export function newInstance(className: 'SnappedPoint'): Java.SnappedPoint;
  export function newInstance(className: 'SnappedSpeedLimitResponse'): Java.SnappedSpeedLimitResponse;
  export function newInstance(className: 'SpeedLimit'): Java.SpeedLimit;
  export function newInstance(className: 'StopDetails'): Java.StopDetails;
  export function newInstance(className: 'TransitAgency'): Java.TransitAgency;
  export function newInstance(className: 'TransitDetails'): Java.TransitDetails;
  export function newInstance(className: 'TransitLine'): Java.TransitLine;
  export function newInstance(className: 'Vehicle'): Java.Vehicle;
  export function newInstance(className: 'Object'): object_t;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: string_t): string;
  export function newInstance(className: 'String', arg0: object_array_t, arg1: object_t): string;
  export function newInstance(className: 'String', arg0: object_t): string;
  export function newInstance(className: 'String', arg0: object_t): string;
  export function newInstance(className: 'String', arg0: string_t): string;
  export function newInstance(className: 'String', arg0: object_array_t): string;
  export function newInstance(className: 'String', arg0: object_array_t): string;
  export function newInstance(className: 'String'): string;
  export function newInstance(className: 'com.google.maps.GeoApiContext', arg0: Java.GeoApiContext$RequestHandler): Java.GeoApiContext;
  export function newInstance(className: 'com.google.maps.GeoApiContext'): Java.GeoApiContext;
  export function newInstance(className: 'com.google.maps.model.AddressComponent'): Java.AddressComponent;
  export function newInstance(className: 'com.google.maps.model.AutocompletePrediction'): Java.AutocompletePrediction;
  export function newInstance(className: 'com.google.maps.model.AutocompletePrediction$MatchedSubstring'): Java.AutocompletePrediction$MatchedSubstring;
  export function newInstance(className: 'com.google.maps.model.AutocompletePrediction$Term'): Java.AutocompletePrediction$Term;
  export function newInstance(className: 'com.google.maps.model.Bounds'): Java.Bounds;
  export function newInstance(className: 'com.google.maps.model.DirectionsLeg'): Java.DirectionsLeg;
  export function newInstance(className: 'com.google.maps.model.DirectionsResult'): Java.DirectionsResult;
  export function newInstance(className: 'com.google.maps.model.DirectionsRoute'): Java.DirectionsRoute;
  export function newInstance(className: 'com.google.maps.model.DirectionsStep'): Java.DirectionsStep;
  export function newInstance(className: 'com.google.maps.model.Distance'): Java.Distance;
  export function newInstance(className: 'com.google.maps.model.DistanceMatrix', arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>): Java.DistanceMatrix;
  export function newInstance(className: 'com.google.maps.model.DistanceMatrixElement'): Java.DistanceMatrixElement;
  export function newInstance(className: 'com.google.maps.model.DistanceMatrixRow'): Java.DistanceMatrixRow;
  export function newInstance(className: 'com.google.maps.model.Duration'): Java.Duration;
  export function newInstance(className: 'com.google.maps.model.ElevationResult'): Java.ElevationResult;
  export function newInstance(className: 'com.google.maps.model.EncodedPolyline', arg0: string_t): Java.EncodedPolyline;
  export function newInstance(className: 'com.google.maps.model.EncodedPolyline', arg0: object_t): Java.EncodedPolyline;
  export function newInstance(className: 'com.google.maps.model.Fare'): Java.Fare;
  export function newInstance(className: 'com.google.maps.model.GeocodedWaypoint'): Java.GeocodedWaypoint;
  export function newInstance(className: 'com.google.maps.model.GeocodingResult'): Java.GeocodingResult;
  export function newInstance(className: 'com.google.maps.model.Geometry'): Java.Geometry;
  export function newInstance(className: 'com.google.maps.model.LatLng', arg0: object_t, arg1: object_t): Java.LatLng;
  export function newInstance(className: 'com.google.maps.model.OpeningHours'): Java.OpeningHours;
  export function newInstance(className: 'com.google.maps.model.OpeningHours$Period'): Java.OpeningHours$Period;
  export function newInstance(className: 'com.google.maps.model.OpeningHours$Period$OpenClose'): Java.OpeningHours$Period$OpenClose;
  export function newInstance(className: 'com.google.maps.model.Photo'): Java.Photo;
  export function newInstance(className: 'com.google.maps.model.PhotoResult'): Java.PhotoResult;
  export function newInstance(className: 'com.google.maps.model.PlaceDetails'): Java.PlaceDetails;
  export function newInstance(className: 'com.google.maps.model.PlaceDetails$AlternatePlaceIds'): Java.PlaceDetails$AlternatePlaceIds;
  export function newInstance(className: 'com.google.maps.model.PlaceDetails$Review'): Java.PlaceDetails$Review;
  export function newInstance(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating'): Java.PlaceDetails$Review$AspectRating;
  export function newInstance(className: 'com.google.maps.model.PlacesSearchResponse'): Java.PlacesSearchResponse;
  export function newInstance(className: 'com.google.maps.model.PlacesSearchResult'): Java.PlacesSearchResult;
  export function newInstance(className: 'com.google.maps.model.SnappedPoint'): Java.SnappedPoint;
  export function newInstance(className: 'com.google.maps.model.SnappedSpeedLimitResponse'): Java.SnappedSpeedLimitResponse;
  export function newInstance(className: 'com.google.maps.model.SpeedLimit'): Java.SpeedLimit;
  export function newInstance(className: 'com.google.maps.model.StopDetails'): Java.StopDetails;
  export function newInstance(className: 'com.google.maps.model.TransitAgency'): Java.TransitAgency;
  export function newInstance(className: 'com.google.maps.model.TransitDetails'): Java.TransitDetails;
  export function newInstance(className: 'com.google.maps.model.TransitLine'): Java.TransitLine;
  export function newInstance(className: 'com.google.maps.model.Vehicle'): Java.Vehicle;
  export function newInstance(className: 'java.lang.Object'): object_t;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: string_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t, arg1: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_t): string;
  export function newInstance(className: 'java.lang.String', arg0: string_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t): string;
  export function newInstance(className: 'java.lang.String', arg0: object_array_t): string;
  export function newInstance(className: 'java.lang.String'): string;
  export function newInstance(className: string, ...args: any[]): any;
  export function newInstance(className: string, ...args: any[]): any {
    var fullName: string = fullyQualifiedName(className) || className;
    args.unshift(fullName);
    return _java.newInstanceSync.apply(_java, args);
  }

  export function newInstanceP(className: 'GeoApiContext', arg0: Java.GeoApiContext$RequestHandler): Promise<Java.GeoApiContext>;
  export function newInstanceP(className: 'GeoApiContext'): Promise<Java.GeoApiContext>;
  export function newInstanceP(className: 'AddressComponent'): Promise<Java.AddressComponent>;
  export function newInstanceP(className: 'AutocompletePrediction'): Promise<Java.AutocompletePrediction>;
  export function newInstanceP(className: 'AutocompletePrediction$MatchedSubstring'): Promise<Java.AutocompletePrediction$MatchedSubstring>;
  export function newInstanceP(className: 'AutocompletePrediction$Term'): Promise<Java.AutocompletePrediction$Term>;
  export function newInstanceP(className: 'Bounds'): Promise<Java.Bounds>;
  export function newInstanceP(className: 'DirectionsLeg'): Promise<Java.DirectionsLeg>;
  export function newInstanceP(className: 'DirectionsResult'): Promise<Java.DirectionsResult>;
  export function newInstanceP(className: 'DirectionsRoute'): Promise<Java.DirectionsRoute>;
  export function newInstanceP(className: 'DirectionsStep'): Promise<Java.DirectionsStep>;
  export function newInstanceP(className: 'Distance'): Promise<Java.Distance>;
  export function newInstanceP(className: 'DistanceMatrix', arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>): Promise<Java.DistanceMatrix>;
  export function newInstanceP(className: 'DistanceMatrixElement'): Promise<Java.DistanceMatrixElement>;
  export function newInstanceP(className: 'DistanceMatrixRow'): Promise<Java.DistanceMatrixRow>;
  export function newInstanceP(className: 'Duration'): Promise<Java.Duration>;
  export function newInstanceP(className: 'ElevationResult'): Promise<Java.ElevationResult>;
  export function newInstanceP(className: 'EncodedPolyline', arg0: string_t): Promise<Java.EncodedPolyline>;
  export function newInstanceP(className: 'EncodedPolyline', arg0: object_t): Promise<Java.EncodedPolyline>;
  export function newInstanceP(className: 'Fare'): Promise<Java.Fare>;
  export function newInstanceP(className: 'GeocodedWaypoint'): Promise<Java.GeocodedWaypoint>;
  export function newInstanceP(className: 'GeocodingResult'): Promise<Java.GeocodingResult>;
  export function newInstanceP(className: 'Geometry'): Promise<Java.Geometry>;
  export function newInstanceP(className: 'LatLng', arg0: object_t, arg1: object_t): Promise<Java.LatLng>;
  export function newInstanceP(className: 'OpeningHours'): Promise<Java.OpeningHours>;
  export function newInstanceP(className: 'OpeningHours$Period'): Promise<Java.OpeningHours$Period>;
  export function newInstanceP(className: 'OpeningHours$Period$OpenClose'): Promise<Java.OpeningHours$Period$OpenClose>;
  export function newInstanceP(className: 'Photo'): Promise<Java.Photo>;
  export function newInstanceP(className: 'PhotoResult'): Promise<Java.PhotoResult>;
  export function newInstanceP(className: 'PlaceDetails'): Promise<Java.PlaceDetails>;
  export function newInstanceP(className: 'PlaceDetails$AlternatePlaceIds'): Promise<Java.PlaceDetails$AlternatePlaceIds>;
  export function newInstanceP(className: 'PlaceDetails$Review'): Promise<Java.PlaceDetails$Review>;
  export function newInstanceP(className: 'PlaceDetails$Review$AspectRating'): Promise<Java.PlaceDetails$Review$AspectRating>;
  export function newInstanceP(className: 'PlacesSearchResponse'): Promise<Java.PlacesSearchResponse>;
  export function newInstanceP(className: 'PlacesSearchResult'): Promise<Java.PlacesSearchResult>;
  export function newInstanceP(className: 'SnappedPoint'): Promise<Java.SnappedPoint>;
  export function newInstanceP(className: 'SnappedSpeedLimitResponse'): Promise<Java.SnappedSpeedLimitResponse>;
  export function newInstanceP(className: 'SpeedLimit'): Promise<Java.SpeedLimit>;
  export function newInstanceP(className: 'StopDetails'): Promise<Java.StopDetails>;
  export function newInstanceP(className: 'TransitAgency'): Promise<Java.TransitAgency>;
  export function newInstanceP(className: 'TransitDetails'): Promise<Java.TransitDetails>;
  export function newInstanceP(className: 'TransitLine'): Promise<Java.TransitLine>;
  export function newInstanceP(className: 'Vehicle'): Promise<Java.Vehicle>;
  export function newInstanceP(className: 'Object'): Promise<object_t>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: string_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t, arg1: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: string_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t): Promise<string>;
  export function newInstanceP(className: 'String', arg0: object_array_t): Promise<string>;
  export function newInstanceP(className: 'String'): Promise<string>;
  export function newInstanceP(className: 'com.google.maps.GeoApiContext', arg0: Java.GeoApiContext$RequestHandler): Promise<Java.GeoApiContext>;
  export function newInstanceP(className: 'com.google.maps.GeoApiContext'): Promise<Java.GeoApiContext>;
  export function newInstanceP(className: 'com.google.maps.model.AddressComponent'): Promise<Java.AddressComponent>;
  export function newInstanceP(className: 'com.google.maps.model.AutocompletePrediction'): Promise<Java.AutocompletePrediction>;
  export function newInstanceP(className: 'com.google.maps.model.AutocompletePrediction$MatchedSubstring'): Promise<Java.AutocompletePrediction$MatchedSubstring>;
  export function newInstanceP(className: 'com.google.maps.model.AutocompletePrediction$Term'): Promise<Java.AutocompletePrediction$Term>;
  export function newInstanceP(className: 'com.google.maps.model.Bounds'): Promise<Java.Bounds>;
  export function newInstanceP(className: 'com.google.maps.model.DirectionsLeg'): Promise<Java.DirectionsLeg>;
  export function newInstanceP(className: 'com.google.maps.model.DirectionsResult'): Promise<Java.DirectionsResult>;
  export function newInstanceP(className: 'com.google.maps.model.DirectionsRoute'): Promise<Java.DirectionsRoute>;
  export function newInstanceP(className: 'com.google.maps.model.DirectionsStep'): Promise<Java.DirectionsStep>;
  export function newInstanceP(className: 'com.google.maps.model.Distance'): Promise<Java.Distance>;
  export function newInstanceP(className: 'com.google.maps.model.DistanceMatrix', arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>): Promise<Java.DistanceMatrix>;
  export function newInstanceP(className: 'com.google.maps.model.DistanceMatrixElement'): Promise<Java.DistanceMatrixElement>;
  export function newInstanceP(className: 'com.google.maps.model.DistanceMatrixRow'): Promise<Java.DistanceMatrixRow>;
  export function newInstanceP(className: 'com.google.maps.model.Duration'): Promise<Java.Duration>;
  export function newInstanceP(className: 'com.google.maps.model.ElevationResult'): Promise<Java.ElevationResult>;
  export function newInstanceP(className: 'com.google.maps.model.EncodedPolyline', arg0: string_t): Promise<Java.EncodedPolyline>;
  export function newInstanceP(className: 'com.google.maps.model.EncodedPolyline', arg0: object_t): Promise<Java.EncodedPolyline>;
  export function newInstanceP(className: 'com.google.maps.model.Fare'): Promise<Java.Fare>;
  export function newInstanceP(className: 'com.google.maps.model.GeocodedWaypoint'): Promise<Java.GeocodedWaypoint>;
  export function newInstanceP(className: 'com.google.maps.model.GeocodingResult'): Promise<Java.GeocodingResult>;
  export function newInstanceP(className: 'com.google.maps.model.Geometry'): Promise<Java.Geometry>;
  export function newInstanceP(className: 'com.google.maps.model.LatLng', arg0: object_t, arg1: object_t): Promise<Java.LatLng>;
  export function newInstanceP(className: 'com.google.maps.model.OpeningHours'): Promise<Java.OpeningHours>;
  export function newInstanceP(className: 'com.google.maps.model.OpeningHours$Period'): Promise<Java.OpeningHours$Period>;
  export function newInstanceP(className: 'com.google.maps.model.OpeningHours$Period$OpenClose'): Promise<Java.OpeningHours$Period$OpenClose>;
  export function newInstanceP(className: 'com.google.maps.model.Photo'): Promise<Java.Photo>;
  export function newInstanceP(className: 'com.google.maps.model.PhotoResult'): Promise<Java.PhotoResult>;
  export function newInstanceP(className: 'com.google.maps.model.PlaceDetails'): Promise<Java.PlaceDetails>;
  export function newInstanceP(className: 'com.google.maps.model.PlaceDetails$AlternatePlaceIds'): Promise<Java.PlaceDetails$AlternatePlaceIds>;
  export function newInstanceP(className: 'com.google.maps.model.PlaceDetails$Review'): Promise<Java.PlaceDetails$Review>;
  export function newInstanceP(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating'): Promise<Java.PlaceDetails$Review$AspectRating>;
  export function newInstanceP(className: 'com.google.maps.model.PlacesSearchResponse'): Promise<Java.PlacesSearchResponse>;
  export function newInstanceP(className: 'com.google.maps.model.PlacesSearchResult'): Promise<Java.PlacesSearchResult>;
  export function newInstanceP(className: 'com.google.maps.model.SnappedPoint'): Promise<Java.SnappedPoint>;
  export function newInstanceP(className: 'com.google.maps.model.SnappedSpeedLimitResponse'): Promise<Java.SnappedSpeedLimitResponse>;
  export function newInstanceP(className: 'com.google.maps.model.SpeedLimit'): Promise<Java.SpeedLimit>;
  export function newInstanceP(className: 'com.google.maps.model.StopDetails'): Promise<Java.StopDetails>;
  export function newInstanceP(className: 'com.google.maps.model.TransitAgency'): Promise<Java.TransitAgency>;
  export function newInstanceP(className: 'com.google.maps.model.TransitDetails'): Promise<Java.TransitDetails>;
  export function newInstanceP(className: 'com.google.maps.model.TransitLine'): Promise<Java.TransitLine>;
  export function newInstanceP(className: 'com.google.maps.model.Vehicle'): Promise<Java.Vehicle>;
  export function newInstanceP(className: 'java.lang.Object'): Promise<object_t>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: string_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t, arg1: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: string_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String', arg0: object_array_t): Promise<string>;
  export function newInstanceP(className: 'java.lang.String'): Promise<string>;
  export function newInstanceP(className: string, ...args: any[]): Promise<any>;
  export function newInstanceP(className: string, ...args: any[]): Promise<any> {
    var fullName: string = fullyQualifiedName(className) || className;
    args.unshift(fullName);
    return _java.newInstanceP.apply(_java, args);
  }

  export function newArray(className: 'FieldNamingPolicy', arg: Java.FieldNamingPolicy[]): array_t<com.google.gson.FieldNamingPolicy>;
  export function newArray(className: 'DirectionsApi', arg: Java.DirectionsApi[]): array_t<com.google.maps.DirectionsApi>;
  export function newArray(className: 'DirectionsApi$RouteRestriction', arg: Java.DirectionsApi$RouteRestriction[]): array_t<com.google.maps.DirectionsApi$RouteRestriction>;
  export function newArray(className: 'DirectionsApiRequest', arg: Java.DirectionsApiRequest[]): array_t<com.google.maps.DirectionsApiRequest>;
  export function newArray(className: 'GeoApiContext', arg: Java.GeoApiContext[]): array_t<com.google.maps.GeoApiContext>;
  export function newArray(className: 'GeoApiContext$RequestHandler', arg: Java.GeoApiContext$RequestHandler[]): array_t<com.google.maps.GeoApiContext$RequestHandler>;
  export function newArray(className: 'AddressComponent', arg: Java.AddressComponent[]): array_t<com.google.maps.model.AddressComponent>;
  export function newArray(className: 'AddressComponentType', arg: Java.AddressComponentType[]): array_t<com.google.maps.model.AddressComponentType>;
  export function newArray(className: 'AddressType', arg: Java.AddressType[]): array_t<com.google.maps.model.AddressType>;
  export function newArray(className: 'AutocompletePrediction', arg: Java.AutocompletePrediction[]): array_t<com.google.maps.model.AutocompletePrediction>;
  export function newArray(className: 'AutocompletePrediction$MatchedSubstring', arg: Java.AutocompletePrediction$MatchedSubstring[]): array_t<com.google.maps.model.AutocompletePrediction$MatchedSubstring>;
  export function newArray(className: 'AutocompletePrediction$Term', arg: Java.AutocompletePrediction$Term[]): array_t<com.google.maps.model.AutocompletePrediction$Term>;
  export function newArray(className: 'Bounds', arg: Java.Bounds[]): array_t<com.google.maps.model.Bounds>;
  export function newArray(className: 'ComponentFilter', arg: Java.ComponentFilter[]): array_t<com.google.maps.model.ComponentFilter>;
  export function newArray(className: 'DirectionsLeg', arg: Java.DirectionsLeg[]): array_t<com.google.maps.model.DirectionsLeg>;
  export function newArray(className: 'DirectionsResult', arg: Java.DirectionsResult[]): array_t<com.google.maps.model.DirectionsResult>;
  export function newArray(className: 'DirectionsRoute', arg: Java.DirectionsRoute[]): array_t<com.google.maps.model.DirectionsRoute>;
  export function newArray(className: 'DirectionsStep', arg: Java.DirectionsStep[]): array_t<com.google.maps.model.DirectionsStep>;
  export function newArray(className: 'Distance', arg: Java.Distance[]): array_t<com.google.maps.model.Distance>;
  export function newArray(className: 'DistanceMatrix', arg: Java.DistanceMatrix[]): array_t<com.google.maps.model.DistanceMatrix>;
  export function newArray(className: 'DistanceMatrixElement', arg: Java.DistanceMatrixElement[]): array_t<com.google.maps.model.DistanceMatrixElement>;
  export function newArray(className: 'DistanceMatrixElementStatus', arg: Java.DistanceMatrixElementStatus[]): array_t<com.google.maps.model.DistanceMatrixElementStatus>;
  export function newArray(className: 'DistanceMatrixRow', arg: Java.DistanceMatrixRow[]): array_t<com.google.maps.model.DistanceMatrixRow>;
  export function newArray(className: 'Duration', arg: Java.Duration[]): array_t<com.google.maps.model.Duration>;
  export function newArray(className: 'ElevationResult', arg: Java.ElevationResult[]): array_t<com.google.maps.model.ElevationResult>;
  export function newArray(className: 'EncodedPolyline', arg: Java.EncodedPolyline[]): array_t<com.google.maps.model.EncodedPolyline>;
  export function newArray(className: 'Fare', arg: Java.Fare[]): array_t<com.google.maps.model.Fare>;
  export function newArray(className: 'GeocodedWaypoint', arg: Java.GeocodedWaypoint[]): array_t<com.google.maps.model.GeocodedWaypoint>;
  export function newArray(className: 'GeocodedWaypointStatus', arg: Java.GeocodedWaypointStatus[]): array_t<com.google.maps.model.GeocodedWaypointStatus>;
  export function newArray(className: 'GeocodingResult', arg: Java.GeocodingResult[]): array_t<com.google.maps.model.GeocodingResult>;
  export function newArray(className: 'Geometry', arg: Java.Geometry[]): array_t<com.google.maps.model.Geometry>;
  export function newArray(className: 'LatLng', arg: Java.LatLng[]): array_t<com.google.maps.model.LatLng>;
  export function newArray(className: 'LocationType', arg: Java.LocationType[]): array_t<com.google.maps.model.LocationType>;
  export function newArray(className: 'OpeningHours', arg: Java.OpeningHours[]): array_t<com.google.maps.model.OpeningHours>;
  export function newArray(className: 'OpeningHours$Period', arg: Java.OpeningHours$Period[]): array_t<com.google.maps.model.OpeningHours$Period>;
  export function newArray(className: 'OpeningHours$Period$OpenClose', arg: Java.OpeningHours$Period$OpenClose[]): array_t<com.google.maps.model.OpeningHours$Period$OpenClose>;
  export function newArray(className: 'OpeningHours$Period$OpenClose$DayOfWeek', arg: Java.OpeningHours$Period$OpenClose$DayOfWeek[]): array_t<com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek>;
  export function newArray(className: 'Photo', arg: Java.Photo[]): array_t<com.google.maps.model.Photo>;
  export function newArray(className: 'PhotoResult', arg: Java.PhotoResult[]): array_t<com.google.maps.model.PhotoResult>;
  export function newArray(className: 'PlaceAutocompleteType', arg: Java.PlaceAutocompleteType[]): array_t<com.google.maps.model.PlaceAutocompleteType>;
  export function newArray(className: 'PlaceDetails', arg: Java.PlaceDetails[]): array_t<com.google.maps.model.PlaceDetails>;
  export function newArray(className: 'PlaceDetails$AlternatePlaceIds', arg: Java.PlaceDetails$AlternatePlaceIds[]): array_t<com.google.maps.model.PlaceDetails$AlternatePlaceIds>;
  export function newArray(className: 'PlaceDetails$Review', arg: Java.PlaceDetails$Review[]): array_t<com.google.maps.model.PlaceDetails$Review>;
  export function newArray(className: 'PlaceDetails$Review$AspectRating', arg: Java.PlaceDetails$Review$AspectRating[]): array_t<com.google.maps.model.PlaceDetails$Review$AspectRating>;
  export function newArray(className: 'PlaceDetails$Review$AspectRating$RatingType', arg: Java.PlaceDetails$Review$AspectRating$RatingType[]): array_t<com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType>;
  export function newArray(className: 'PlaceIdScope', arg: Java.PlaceIdScope[]): array_t<com.google.maps.model.PlaceIdScope>;
  export function newArray(className: 'PlacesSearchResponse', arg: Java.PlacesSearchResponse[]): array_t<com.google.maps.model.PlacesSearchResponse>;
  export function newArray(className: 'PlacesSearchResult', arg: Java.PlacesSearchResult[]): array_t<com.google.maps.model.PlacesSearchResult>;
  export function newArray(className: 'PlaceType', arg: Java.PlaceType[]): array_t<com.google.maps.model.PlaceType>;
  export function newArray(className: 'PriceLevel', arg: Java.PriceLevel[]): array_t<com.google.maps.model.PriceLevel>;
  export function newArray(className: 'RankBy', arg: Java.RankBy[]): array_t<com.google.maps.model.RankBy>;
  export function newArray(className: 'SnappedPoint', arg: Java.SnappedPoint[]): array_t<com.google.maps.model.SnappedPoint>;
  export function newArray(className: 'SnappedSpeedLimitResponse', arg: Java.SnappedSpeedLimitResponse[]): array_t<com.google.maps.model.SnappedSpeedLimitResponse>;
  export function newArray(className: 'SpeedLimit', arg: Java.SpeedLimit[]): array_t<com.google.maps.model.SpeedLimit>;
  export function newArray(className: 'StopDetails', arg: Java.StopDetails[]): array_t<com.google.maps.model.StopDetails>;
  export function newArray(className: 'TrafficModel', arg: Java.TrafficModel[]): array_t<com.google.maps.model.TrafficModel>;
  export function newArray(className: 'TransitAgency', arg: Java.TransitAgency[]): array_t<com.google.maps.model.TransitAgency>;
  export function newArray(className: 'TransitDetails', arg: Java.TransitDetails[]): array_t<com.google.maps.model.TransitDetails>;
  export function newArray(className: 'TransitLine', arg: Java.TransitLine[]): array_t<com.google.maps.model.TransitLine>;
  export function newArray(className: 'TransitMode', arg: Java.TransitMode[]): array_t<com.google.maps.model.TransitMode>;
  export function newArray(className: 'TransitRoutingPreference', arg: Java.TransitRoutingPreference[]): array_t<com.google.maps.model.TransitRoutingPreference>;
  export function newArray(className: 'TravelMode', arg: Java.TravelMode[]): array_t<com.google.maps.model.TravelMode>;
  export function newArray(className: 'Unit', arg: Java.Unit[]): array_t<com.google.maps.model.Unit>;
  export function newArray(className: 'Vehicle', arg: Java.Vehicle[]): array_t<com.google.maps.model.Vehicle>;
  export function newArray(className: 'VehicleType', arg: Java.VehicleType[]): array_t<com.google.maps.model.VehicleType>;
  export function newArray(className: 'PendingResult', arg: Java.PendingResult[]): array_t<com.google.maps.PendingResult>;
  export function newArray(className: 'PendingResult$Callback', arg: Java.PendingResult$Callback[]): array_t<com.google.maps.PendingResult$Callback>;
  export function newArray(className: 'Object', arg: object_t[]): array_t<java.lang.Object>;
  export function newArray(className: 'String', arg: string_t[]): array_t<java.lang.String>;
  export function newArray(className: 'com.google.gson.FieldNamingPolicy', arg: Java.FieldNamingPolicy[]): array_t<com.google.gson.FieldNamingPolicy>;
  export function newArray(className: 'com.google.maps.DirectionsApi', arg: Java.DirectionsApi[]): array_t<com.google.maps.DirectionsApi>;
  export function newArray(className: 'com.google.maps.DirectionsApi$RouteRestriction', arg: Java.DirectionsApi$RouteRestriction[]): array_t<com.google.maps.DirectionsApi$RouteRestriction>;
  export function newArray(className: 'com.google.maps.DirectionsApiRequest', arg: Java.DirectionsApiRequest[]): array_t<com.google.maps.DirectionsApiRequest>;
  export function newArray(className: 'com.google.maps.GeoApiContext', arg: Java.GeoApiContext[]): array_t<com.google.maps.GeoApiContext>;
  export function newArray(className: 'com.google.maps.GeoApiContext$RequestHandler', arg: Java.GeoApiContext$RequestHandler[]): array_t<com.google.maps.GeoApiContext$RequestHandler>;
  export function newArray(className: 'com.google.maps.model.AddressComponent', arg: Java.AddressComponent[]): array_t<com.google.maps.model.AddressComponent>;
  export function newArray(className: 'com.google.maps.model.AddressComponentType', arg: Java.AddressComponentType[]): array_t<com.google.maps.model.AddressComponentType>;
  export function newArray(className: 'com.google.maps.model.AddressType', arg: Java.AddressType[]): array_t<com.google.maps.model.AddressType>;
  export function newArray(className: 'com.google.maps.model.AutocompletePrediction', arg: Java.AutocompletePrediction[]): array_t<com.google.maps.model.AutocompletePrediction>;
  export function newArray(className: 'com.google.maps.model.AutocompletePrediction$MatchedSubstring', arg: Java.AutocompletePrediction$MatchedSubstring[]): array_t<com.google.maps.model.AutocompletePrediction$MatchedSubstring>;
  export function newArray(className: 'com.google.maps.model.AutocompletePrediction$Term', arg: Java.AutocompletePrediction$Term[]): array_t<com.google.maps.model.AutocompletePrediction$Term>;
  export function newArray(className: 'com.google.maps.model.Bounds', arg: Java.Bounds[]): array_t<com.google.maps.model.Bounds>;
  export function newArray(className: 'com.google.maps.model.ComponentFilter', arg: Java.ComponentFilter[]): array_t<com.google.maps.model.ComponentFilter>;
  export function newArray(className: 'com.google.maps.model.DirectionsLeg', arg: Java.DirectionsLeg[]): array_t<com.google.maps.model.DirectionsLeg>;
  export function newArray(className: 'com.google.maps.model.DirectionsResult', arg: Java.DirectionsResult[]): array_t<com.google.maps.model.DirectionsResult>;
  export function newArray(className: 'com.google.maps.model.DirectionsRoute', arg: Java.DirectionsRoute[]): array_t<com.google.maps.model.DirectionsRoute>;
  export function newArray(className: 'com.google.maps.model.DirectionsStep', arg: Java.DirectionsStep[]): array_t<com.google.maps.model.DirectionsStep>;
  export function newArray(className: 'com.google.maps.model.Distance', arg: Java.Distance[]): array_t<com.google.maps.model.Distance>;
  export function newArray(className: 'com.google.maps.model.DistanceMatrix', arg: Java.DistanceMatrix[]): array_t<com.google.maps.model.DistanceMatrix>;
  export function newArray(className: 'com.google.maps.model.DistanceMatrixElement', arg: Java.DistanceMatrixElement[]): array_t<com.google.maps.model.DistanceMatrixElement>;
  export function newArray(className: 'com.google.maps.model.DistanceMatrixElementStatus', arg: Java.DistanceMatrixElementStatus[]): array_t<com.google.maps.model.DistanceMatrixElementStatus>;
  export function newArray(className: 'com.google.maps.model.DistanceMatrixRow', arg: Java.DistanceMatrixRow[]): array_t<com.google.maps.model.DistanceMatrixRow>;
  export function newArray(className: 'com.google.maps.model.Duration', arg: Java.Duration[]): array_t<com.google.maps.model.Duration>;
  export function newArray(className: 'com.google.maps.model.ElevationResult', arg: Java.ElevationResult[]): array_t<com.google.maps.model.ElevationResult>;
  export function newArray(className: 'com.google.maps.model.EncodedPolyline', arg: Java.EncodedPolyline[]): array_t<com.google.maps.model.EncodedPolyline>;
  export function newArray(className: 'com.google.maps.model.Fare', arg: Java.Fare[]): array_t<com.google.maps.model.Fare>;
  export function newArray(className: 'com.google.maps.model.GeocodedWaypoint', arg: Java.GeocodedWaypoint[]): array_t<com.google.maps.model.GeocodedWaypoint>;
  export function newArray(className: 'com.google.maps.model.GeocodedWaypointStatus', arg: Java.GeocodedWaypointStatus[]): array_t<com.google.maps.model.GeocodedWaypointStatus>;
  export function newArray(className: 'com.google.maps.model.GeocodingResult', arg: Java.GeocodingResult[]): array_t<com.google.maps.model.GeocodingResult>;
  export function newArray(className: 'com.google.maps.model.Geometry', arg: Java.Geometry[]): array_t<com.google.maps.model.Geometry>;
  export function newArray(className: 'com.google.maps.model.LatLng', arg: Java.LatLng[]): array_t<com.google.maps.model.LatLng>;
  export function newArray(className: 'com.google.maps.model.LocationType', arg: Java.LocationType[]): array_t<com.google.maps.model.LocationType>;
  export function newArray(className: 'com.google.maps.model.OpeningHours', arg: Java.OpeningHours[]): array_t<com.google.maps.model.OpeningHours>;
  export function newArray(className: 'com.google.maps.model.OpeningHours$Period', arg: Java.OpeningHours$Period[]): array_t<com.google.maps.model.OpeningHours$Period>;
  export function newArray(className: 'com.google.maps.model.OpeningHours$Period$OpenClose', arg: Java.OpeningHours$Period$OpenClose[]): array_t<com.google.maps.model.OpeningHours$Period$OpenClose>;
  export function newArray(className: 'com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek', arg: Java.OpeningHours$Period$OpenClose$DayOfWeek[]): array_t<com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek>;
  export function newArray(className: 'com.google.maps.model.Photo', arg: Java.Photo[]): array_t<com.google.maps.model.Photo>;
  export function newArray(className: 'com.google.maps.model.PhotoResult', arg: Java.PhotoResult[]): array_t<com.google.maps.model.PhotoResult>;
  export function newArray(className: 'com.google.maps.model.PlaceAutocompleteType', arg: Java.PlaceAutocompleteType[]): array_t<com.google.maps.model.PlaceAutocompleteType>;
  export function newArray(className: 'com.google.maps.model.PlaceDetails', arg: Java.PlaceDetails[]): array_t<com.google.maps.model.PlaceDetails>;
  export function newArray(className: 'com.google.maps.model.PlaceDetails$AlternatePlaceIds', arg: Java.PlaceDetails$AlternatePlaceIds[]): array_t<com.google.maps.model.PlaceDetails$AlternatePlaceIds>;
  export function newArray(className: 'com.google.maps.model.PlaceDetails$Review', arg: Java.PlaceDetails$Review[]): array_t<com.google.maps.model.PlaceDetails$Review>;
  export function newArray(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating', arg: Java.PlaceDetails$Review$AspectRating[]): array_t<com.google.maps.model.PlaceDetails$Review$AspectRating>;
  export function newArray(className: 'com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType', arg: Java.PlaceDetails$Review$AspectRating$RatingType[]): array_t<com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType>;
  export function newArray(className: 'com.google.maps.model.PlaceIdScope', arg: Java.PlaceIdScope[]): array_t<com.google.maps.model.PlaceIdScope>;
  export function newArray(className: 'com.google.maps.model.PlacesSearchResponse', arg: Java.PlacesSearchResponse[]): array_t<com.google.maps.model.PlacesSearchResponse>;
  export function newArray(className: 'com.google.maps.model.PlacesSearchResult', arg: Java.PlacesSearchResult[]): array_t<com.google.maps.model.PlacesSearchResult>;
  export function newArray(className: 'com.google.maps.model.PlaceType', arg: Java.PlaceType[]): array_t<com.google.maps.model.PlaceType>;
  export function newArray(className: 'com.google.maps.model.PriceLevel', arg: Java.PriceLevel[]): array_t<com.google.maps.model.PriceLevel>;
  export function newArray(className: 'com.google.maps.model.RankBy', arg: Java.RankBy[]): array_t<com.google.maps.model.RankBy>;
  export function newArray(className: 'com.google.maps.model.SnappedPoint', arg: Java.SnappedPoint[]): array_t<com.google.maps.model.SnappedPoint>;
  export function newArray(className: 'com.google.maps.model.SnappedSpeedLimitResponse', arg: Java.SnappedSpeedLimitResponse[]): array_t<com.google.maps.model.SnappedSpeedLimitResponse>;
  export function newArray(className: 'com.google.maps.model.SpeedLimit', arg: Java.SpeedLimit[]): array_t<com.google.maps.model.SpeedLimit>;
  export function newArray(className: 'com.google.maps.model.StopDetails', arg: Java.StopDetails[]): array_t<com.google.maps.model.StopDetails>;
  export function newArray(className: 'com.google.maps.model.TrafficModel', arg: Java.TrafficModel[]): array_t<com.google.maps.model.TrafficModel>;
  export function newArray(className: 'com.google.maps.model.TransitAgency', arg: Java.TransitAgency[]): array_t<com.google.maps.model.TransitAgency>;
  export function newArray(className: 'com.google.maps.model.TransitDetails', arg: Java.TransitDetails[]): array_t<com.google.maps.model.TransitDetails>;
  export function newArray(className: 'com.google.maps.model.TransitLine', arg: Java.TransitLine[]): array_t<com.google.maps.model.TransitLine>;
  export function newArray(className: 'com.google.maps.model.TransitMode', arg: Java.TransitMode[]): array_t<com.google.maps.model.TransitMode>;
  export function newArray(className: 'com.google.maps.model.TransitRoutingPreference', arg: Java.TransitRoutingPreference[]): array_t<com.google.maps.model.TransitRoutingPreference>;
  export function newArray(className: 'com.google.maps.model.TravelMode', arg: Java.TravelMode[]): array_t<com.google.maps.model.TravelMode>;
  export function newArray(className: 'com.google.maps.model.Unit', arg: Java.Unit[]): array_t<com.google.maps.model.Unit>;
  export function newArray(className: 'com.google.maps.model.Vehicle', arg: Java.Vehicle[]): array_t<com.google.maps.model.Vehicle>;
  export function newArray(className: 'com.google.maps.model.VehicleType', arg: Java.VehicleType[]): array_t<com.google.maps.model.VehicleType>;
  export function newArray(className: 'com.google.maps.PendingResult', arg: Java.PendingResult[]): array_t<com.google.maps.PendingResult>;
  export function newArray(className: 'com.google.maps.PendingResult$Callback', arg: Java.PendingResult$Callback[]): array_t<com.google.maps.PendingResult$Callback>;
  export function newArray(className: 'java.lang.Object', arg: object_t[]): array_t<java.lang.Object>;
  export function newArray(className: 'java.lang.String', arg: string_t[]): array_t<java.lang.String>;
  export function newArray<T>(className: string, arg: any[]): array_t<T>;
  export function newArray<T>(className: string, arg: any[]): array_t<T> {
    var fullName: string = fullyQualifiedName(className) || className;
    return _java.newArray(fullName, arg);
  }

  // export module Java {

  // Node-java has special handling for methods that return long or java.lang.Long,
  // returning a Javascript Number but with an additional property longValue.
  export interface longValue_t extends Number {
    longValue: string;
  }

  // Node-java can automatically coerce a javascript string into a java.lang.String.
  // This special type alias allows to declare that possiblity to Typescript.
  export type string_t = string | Java.java.lang.String;

  // Java methods that take java.lang.Object parameters implicitly will take a java.lang.String.
  // But string_t is not sufficient for this case, we need object_t.
  export type object_t = Java.java.lang.Object | string | boolean | number | longValue_t;

  // Java methods that take long or java.lang.Long parameters may take javascript numbers,
  // longValue_t (see above) or java.lang.Long.
  // This special type alias allows to declare that possiblity to Typescript.
  export type long_t = number | longValue_t ;

  // Handling of other primitive numeric types is simpler, as there is no loss of precision.
  export type boolean_t = boolean ;
  export type short_t = number ;
  export type integer_t = number ;
  export type double_t = number ;
  export type float_t = number ;
  export type number_t = number ;

  export interface array_t<T> extends Java.java.lang.Object {
    // This is an opaque type for a java array_t T[];
    // Use Java.newArray<T>(className, [...]) to create wherever a Java method expects a T[],
    // most notably for vararg parameteters.
    __dummy: T;
  }

  export type object_array_t = array_t<Java.java.lang.Object> | object_t[];

  export import FieldNamingPolicy = com.google.gson.FieldNamingPolicy;
  export import DirectionsApi = com.google.maps.DirectionsApi;
  export import DirectionsApi$RouteRestriction = com.google.maps.DirectionsApi$RouteRestriction;
  export import DirectionsApiRequest = com.google.maps.DirectionsApiRequest;
  export import GeoApiContext = com.google.maps.GeoApiContext;
  export import GeoApiContext$RequestHandler = com.google.maps.GeoApiContext$RequestHandler;
  export import AddressComponent = com.google.maps.model.AddressComponent;
  export import AddressComponentType = com.google.maps.model.AddressComponentType;
  export import AddressType = com.google.maps.model.AddressType;
  export import AutocompletePrediction = com.google.maps.model.AutocompletePrediction;
  export import AutocompletePrediction$MatchedSubstring = com.google.maps.model.AutocompletePrediction$MatchedSubstring;
  export import AutocompletePrediction$Term = com.google.maps.model.AutocompletePrediction$Term;
  export import Bounds = com.google.maps.model.Bounds;
  export import ComponentFilter = com.google.maps.model.ComponentFilter;
  export import DirectionsLeg = com.google.maps.model.DirectionsLeg;
  export import DirectionsResult = com.google.maps.model.DirectionsResult;
  export import DirectionsRoute = com.google.maps.model.DirectionsRoute;
  export import DirectionsStep = com.google.maps.model.DirectionsStep;
  export import Distance = com.google.maps.model.Distance;
  export import DistanceMatrix = com.google.maps.model.DistanceMatrix;
  export import DistanceMatrixElement = com.google.maps.model.DistanceMatrixElement;
  export import DistanceMatrixElementStatus = com.google.maps.model.DistanceMatrixElementStatus;
  export import DistanceMatrixRow = com.google.maps.model.DistanceMatrixRow;
  export import Duration = com.google.maps.model.Duration;
  export import ElevationResult = com.google.maps.model.ElevationResult;
  export import EncodedPolyline = com.google.maps.model.EncodedPolyline;
  export import Fare = com.google.maps.model.Fare;
  export import GeocodedWaypoint = com.google.maps.model.GeocodedWaypoint;
  export import GeocodedWaypointStatus = com.google.maps.model.GeocodedWaypointStatus;
  export import GeocodingResult = com.google.maps.model.GeocodingResult;
  export import Geometry = com.google.maps.model.Geometry;
  export import LatLng = com.google.maps.model.LatLng;
  export import LocationType = com.google.maps.model.LocationType;
  export import OpeningHours = com.google.maps.model.OpeningHours;
  export import OpeningHours$Period = com.google.maps.model.OpeningHours$Period;
  export import OpeningHours$Period$OpenClose = com.google.maps.model.OpeningHours$Period$OpenClose;
  export import OpeningHours$Period$OpenClose$DayOfWeek = com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek;
  export import Photo = com.google.maps.model.Photo;
  export import PhotoResult = com.google.maps.model.PhotoResult;
  export import PlaceAutocompleteType = com.google.maps.model.PlaceAutocompleteType;
  export import PlaceDetails = com.google.maps.model.PlaceDetails;
  export import PlaceDetails$AlternatePlaceIds = com.google.maps.model.PlaceDetails$AlternatePlaceIds;
  export import PlaceDetails$Review = com.google.maps.model.PlaceDetails$Review;
  export import PlaceDetails$Review$AspectRating = com.google.maps.model.PlaceDetails$Review$AspectRating;
  export import PlaceDetails$Review$AspectRating$RatingType = com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType;
  export import PlaceIdScope = com.google.maps.model.PlaceIdScope;
  export import PlacesSearchResponse = com.google.maps.model.PlacesSearchResponse;
  export import PlacesSearchResult = com.google.maps.model.PlacesSearchResult;
  export import PlaceType = com.google.maps.model.PlaceType;
  export import PriceLevel = com.google.maps.model.PriceLevel;
  export import RankBy = com.google.maps.model.RankBy;
  export import SnappedPoint = com.google.maps.model.SnappedPoint;
  export import SnappedSpeedLimitResponse = com.google.maps.model.SnappedSpeedLimitResponse;
  export import SpeedLimit = com.google.maps.model.SpeedLimit;
  export import StopDetails = com.google.maps.model.StopDetails;
  export import TrafficModel = com.google.maps.model.TrafficModel;
  export import TransitAgency = com.google.maps.model.TransitAgency;
  export import TransitDetails = com.google.maps.model.TransitDetails;
  export import TransitLine = com.google.maps.model.TransitLine;
  export import TransitMode = com.google.maps.model.TransitMode;
  export import TransitRoutingPreference = com.google.maps.model.TransitRoutingPreference;
  export import TravelMode = com.google.maps.model.TravelMode;
  export import Unit = com.google.maps.model.Unit;
  export import Vehicle = com.google.maps.model.Vehicle;
  export import VehicleType = com.google.maps.model.VehicleType;
  export import PendingResult = com.google.maps.PendingResult;
  export import PendingResult$Callback = com.google.maps.PendingResult$Callback;
  export import Object = java.lang.Object;
  export import String = java.lang.String;

  export module com.google.gson {
    export interface FieldNamingPolicy extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public abstract java.lang.String com.google.gson.FieldNamingStrategy.translateName(java.lang.reflect.Field)
      translateNameA(arg0: object_t, cb: Callback<string>): void;
      translateName(arg0: object_t): string;
      translateNameP(arg0: object_t): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module FieldNamingPolicy {
      export interface Static {
        IDENTITY: Java.FieldNamingPolicy;
        UPPER_CAMEL_CASE: Java.FieldNamingPolicy;
        UPPER_CAMEL_CASE_WITH_SPACES: Java.FieldNamingPolicy;
        LOWER_CASE_WITH_UNDERSCORES: Java.FieldNamingPolicy;
        LOWER_CASE_WITH_DASHES: Java.FieldNamingPolicy;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.gson.FieldNamingPolicy com.google.gson.FieldNamingPolicy.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.FieldNamingPolicy>): void;
        valueOf(arg0: string_t): Java.FieldNamingPolicy;
        valueOfP(arg0: string_t): Promise<Java.FieldNamingPolicy>;
        // public static com.google.gson.FieldNamingPolicy[] com.google.gson.FieldNamingPolicy.values()
        valuesA( cb: Callback<Java.FieldNamingPolicy[]>): void;
        values(): Java.FieldNamingPolicy[];
        valuesP(): Promise<Java.FieldNamingPolicy[]>;
      }
    }
  }

  export module com.google.maps {
    export interface DirectionsApi extends Java.java.lang.Object {
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DirectionsApi {
      export interface Static {
        class: Java.Object;
        // public static com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApi.getDirections(com.google.maps.GeoApiContext,java.lang.String,java.lang.String)
        getDirectionsA(arg0: Java.GeoApiContext, arg1: string_t, arg2: string_t, cb: Callback<Java.DirectionsApiRequest>): void;
        getDirections(arg0: Java.GeoApiContext, arg1: string_t, arg2: string_t): Java.DirectionsApiRequest;
        getDirectionsP(arg0: Java.GeoApiContext, arg1: string_t, arg2: string_t): Promise<Java.DirectionsApiRequest>;
        // public static com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApi.newRequest(com.google.maps.GeoApiContext)
        newRequestA(arg0: Java.GeoApiContext, cb: Callback<Java.DirectionsApiRequest>): void;
        newRequest(arg0: Java.GeoApiContext): Java.DirectionsApiRequest;
        newRequestP(arg0: Java.GeoApiContext): Promise<Java.DirectionsApiRequest>;
      }
    }
  }

  export module com.google.maps {
    export interface DirectionsApi$RouteRestriction extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.DirectionsApi$RouteRestriction.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DirectionsApi$RouteRestriction {
      export interface Static {
        TOLLS: Java.DirectionsApi$RouteRestriction;
        HIGHWAYS: Java.DirectionsApi$RouteRestriction;
        FERRIES: Java.DirectionsApi$RouteRestriction;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.DirectionsApi$RouteRestriction com.google.maps.DirectionsApi$RouteRestriction.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.DirectionsApi$RouteRestriction>): void;
        valueOf(arg0: string_t): Java.DirectionsApi$RouteRestriction;
        valueOfP(arg0: string_t): Promise<Java.DirectionsApi$RouteRestriction>;
        // public static com.google.maps.DirectionsApi$RouteRestriction[] com.google.maps.DirectionsApi$RouteRestriction.values()
        valuesA( cb: Callback<Java.DirectionsApi$RouteRestriction[]>): void;
        values(): Java.DirectionsApi$RouteRestriction[];
        valuesP(): Promise<Java.DirectionsApi$RouteRestriction[]>;
      }
    }
  }

  export module com.google.maps {
    export interface DirectionsApiRequest extends Java.java.lang.Object {
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.alternatives(boolean)
      alternativesA(arg0: object_t, cb: Callback<Java.DirectionsApiRequest>): void;
      alternatives(arg0: object_t): Java.DirectionsApiRequest;
      alternativesP(arg0: object_t): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.arrivalTime(org.joda.time.ReadableInstant)
      arrivalTimeA(arg0: object_t, cb: Callback<Java.DirectionsApiRequest>): void;
      arrivalTime(arg0: object_t): Java.DirectionsApiRequest;
      arrivalTimeP(arg0: object_t): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.avoid(com.google.maps.DirectionsApi$RouteRestriction...)
      avoidA(arg0: array_t<Java.DirectionsApi$RouteRestriction>, cb: Callback<Java.DirectionsApiRequest>): void;
      avoid(...arg0: Java.DirectionsApi$RouteRestriction[]): Java.DirectionsApiRequest;
      avoid(arg0: array_t<Java.DirectionsApi$RouteRestriction>): Java.DirectionsApiRequest;
      avoidP(...arg0: Java.DirectionsApi$RouteRestriction[]): Promise<Java.DirectionsApiRequest>;
      avoidP(arg0: array_t<Java.DirectionsApi$RouteRestriction>): Promise<Java.DirectionsApiRequest>;
      // public final T com.google.maps.PendingResultBase.await() throws java.lang.Exception
      awaitA( cb: Callback<object_t>): void;
      await(): object_t;
      awaitP(): Promise<object_t>;
      // public final T com.google.maps.PendingResultBase.awaitIgnoreError()
      awaitIgnoreErrorA( cb: Callback<object_t>): void;
      awaitIgnoreError(): object_t;
      awaitIgnoreErrorP(): Promise<object_t>;
      // public final void com.google.maps.PendingResultBase.cancel()
      cancelA( cb: Callback<void>): void;
      cancel(): void;
      cancelP(): Promise<void>;
      // public A com.google.maps.PendingResultBase.channel(java.lang.String)
      channelA(arg0: string_t, cb: Callback<object_t>): void;
      channel(arg0: string_t): object_t;
      channelP(arg0: string_t): Promise<object_t>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.departureTime(org.joda.time.ReadableInstant)
      departureTimeA(arg0: object_t, cb: Callback<Java.DirectionsApiRequest>): void;
      departureTime(arg0: object_t): Java.DirectionsApiRequest;
      departureTimeP(arg0: object_t): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.destination(com.google.maps.model.LatLng)
      destinationA(arg0: Java.LatLng, cb: Callback<Java.DirectionsApiRequest>): void;
      destination(arg0: Java.LatLng): Java.DirectionsApiRequest;
      destinationP(arg0: Java.LatLng): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.destination(java.lang.String)
      destinationA(arg0: string_t, cb: Callback<Java.DirectionsApiRequest>): void;
      destination(arg0: string_t): Java.DirectionsApiRequest;
      destinationP(arg0: string_t): Promise<Java.DirectionsApiRequest>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final A com.google.maps.PendingResultBase.language(java.lang.String)
      languageA(arg0: string_t, cb: Callback<object_t>): void;
      language(arg0: string_t): object_t;
      languageP(arg0: string_t): Promise<object_t>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.mode(com.google.maps.model.TravelMode)
      modeA(arg0: Java.TravelMode, cb: Callback<Java.DirectionsApiRequest>): void;
      mode(arg0: Java.TravelMode): Java.DirectionsApiRequest;
      modeP(arg0: Java.TravelMode): Promise<Java.DirectionsApiRequest>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.optimizeWaypoints(boolean)
      optimizeWaypointsA(arg0: object_t, cb: Callback<Java.DirectionsApiRequest>): void;
      optimizeWaypoints(arg0: object_t): Java.DirectionsApiRequest;
      optimizeWaypointsP(arg0: object_t): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.origin(com.google.maps.model.LatLng)
      originA(arg0: Java.LatLng, cb: Callback<Java.DirectionsApiRequest>): void;
      origin(arg0: Java.LatLng): Java.DirectionsApiRequest;
      originP(arg0: Java.LatLng): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.origin(java.lang.String)
      originA(arg0: string_t, cb: Callback<Java.DirectionsApiRequest>): void;
      origin(arg0: string_t): Java.DirectionsApiRequest;
      originP(arg0: string_t): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.region(java.lang.String)
      regionA(arg0: string_t, cb: Callback<Java.DirectionsApiRequest>): void;
      region(arg0: string_t): Java.DirectionsApiRequest;
      regionP(arg0: string_t): Promise<Java.DirectionsApiRequest>;
      // public final void com.google.maps.PendingResultBase.setCallback(com.google.maps.PendingResult.com.google.maps.PendingResult$Callback<T>)
      setCallbackA(arg0: Java.PendingResult$Callback, cb: Callback<void>): void;
      setCallback(arg0: Java.PendingResult$Callback): void;
      setCallbackP(arg0: Java.PendingResult$Callback): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.trafficModel(com.google.maps.model.TrafficModel)
      trafficModelA(arg0: Java.TrafficModel, cb: Callback<Java.DirectionsApiRequest>): void;
      trafficModel(arg0: Java.TrafficModel): Java.DirectionsApiRequest;
      trafficModelP(arg0: Java.TrafficModel): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.transitMode(com.google.maps.model.TransitMode...)
      transitModeA(arg0: array_t<Java.TransitMode>, cb: Callback<Java.DirectionsApiRequest>): void;
      transitMode(...arg0: Java.TransitMode[]): Java.DirectionsApiRequest;
      transitMode(arg0: array_t<Java.TransitMode>): Java.DirectionsApiRequest;
      transitModeP(...arg0: Java.TransitMode[]): Promise<Java.DirectionsApiRequest>;
      transitModeP(arg0: array_t<Java.TransitMode>): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.transitRoutingPreference(com.google.maps.model.TransitRoutingPreference)
      transitRoutingPreferenceA(arg0: Java.TransitRoutingPreference, cb: Callback<Java.DirectionsApiRequest>): void;
      transitRoutingPreference(arg0: Java.TransitRoutingPreference): Java.DirectionsApiRequest;
      transitRoutingPreferenceP(arg0: Java.TransitRoutingPreference): Promise<Java.DirectionsApiRequest>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.units(com.google.maps.model.Unit)
      unitsA(arg0: Java.Unit, cb: Callback<Java.DirectionsApiRequest>): void;
      units(arg0: Java.Unit): Java.DirectionsApiRequest;
      unitsP(arg0: Java.Unit): Promise<Java.DirectionsApiRequest>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
      // public com.google.maps.DirectionsApiRequest com.google.maps.DirectionsApiRequest.waypoints(java.lang.String...)
      waypointsA(arg0: array_t<string_t>, cb: Callback<Java.DirectionsApiRequest>): void;
      waypoints(...arg0: string_t[]): Java.DirectionsApiRequest;
      waypoints(arg0: array_t<string_t>): Java.DirectionsApiRequest;
      waypointsP(...arg0: string_t[]): Promise<Java.DirectionsApiRequest>;
      waypointsP(arg0: array_t<string_t>): Promise<Java.DirectionsApiRequest>;
    }
    export module DirectionsApiRequest {
      export interface Static {
        class: Java.Object;
      }
    }
  }

  export module com.google.maps {
    export interface GeoApiContext extends Java.java.lang.Object {
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setApiKey(java.lang.String)
      setApiKeyA(arg0: string_t, cb: Callback<Java.GeoApiContext>): void;
      setApiKey(arg0: string_t): Java.GeoApiContext;
      setApiKeyP(arg0: string_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setChannel(java.lang.String)
      setChannelA(arg0: string_t, cb: Callback<Java.GeoApiContext>): void;
      setChannel(arg0: string_t): Java.GeoApiContext;
      setChannelP(arg0: string_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setConnectTimeout(long,java.util.concurrent.TimeUnit)
      setConnectTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<Java.GeoApiContext>): void;
      setConnectTimeout(arg0: object_t, arg1: object_t): Java.GeoApiContext;
      setConnectTimeoutP(arg0: object_t, arg1: object_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setEnterpriseCredentials(java.lang.String,java.lang.String)
      setEnterpriseCredentialsA(arg0: string_t, arg1: string_t, cb: Callback<Java.GeoApiContext>): void;
      setEnterpriseCredentials(arg0: string_t, arg1: string_t): Java.GeoApiContext;
      setEnterpriseCredentialsP(arg0: string_t, arg1: string_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setProxy(java.net.Proxy)
      setProxyA(arg0: object_t, cb: Callback<Java.GeoApiContext>): void;
      setProxy(arg0: object_t): Java.GeoApiContext;
      setProxyP(arg0: object_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setQueryRateLimit(int,int)
      setQueryRateLimitA(arg0: object_t, arg1: object_t, cb: Callback<Java.GeoApiContext>): void;
      setQueryRateLimit(arg0: object_t, arg1: object_t): Java.GeoApiContext;
      setQueryRateLimitP(arg0: object_t, arg1: object_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setQueryRateLimit(int)
      setQueryRateLimitA(arg0: object_t, cb: Callback<Java.GeoApiContext>): void;
      setQueryRateLimit(arg0: object_t): Java.GeoApiContext;
      setQueryRateLimitP(arg0: object_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setReadTimeout(long,java.util.concurrent.TimeUnit)
      setReadTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<Java.GeoApiContext>): void;
      setReadTimeout(arg0: object_t, arg1: object_t): Java.GeoApiContext;
      setReadTimeoutP(arg0: object_t, arg1: object_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setRetryTimeout(long,java.util.concurrent.TimeUnit)
      setRetryTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<Java.GeoApiContext>): void;
      setRetryTimeout(arg0: object_t, arg1: object_t): Java.GeoApiContext;
      setRetryTimeoutP(arg0: object_t, arg1: object_t): Promise<Java.GeoApiContext>;
      // public com.google.maps.GeoApiContext com.google.maps.GeoApiContext.setWriteTimeout(long,java.util.concurrent.TimeUnit)
      setWriteTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<Java.GeoApiContext>): void;
      setWriteTimeout(arg0: object_t, arg1: object_t): Java.GeoApiContext;
      setWriteTimeoutP(arg0: object_t, arg1: object_t): Promise<Java.GeoApiContext>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module GeoApiContext {
      export interface Static {
        class: Java.Object;
        new (arg0: Java.GeoApiContext$RequestHandler): com.google.maps.GeoApiContext;
        new (): com.google.maps.GeoApiContext;
      }
    }
  }

  export module com.google.maps {
    export interface GeoApiContext$RequestHandler extends Java.java.lang.Object {
      // public abstract <T,R> com.google.maps.PendingResult<T> com.google.maps.GeoApiContext$RequestHandler.handle(java.lang.String,java.lang.String,java.lang.String,java.lang.Class<R>,com.google.gson.FieldNamingPolicy,long)
      handleA(arg0: string_t, arg1: string_t, arg2: string_t, arg3: object_t, arg4: Java.FieldNamingPolicy, arg5: object_t, cb: Callback<Java.PendingResult>): void;
      handle(arg0: string_t, arg1: string_t, arg2: string_t, arg3: object_t, arg4: Java.FieldNamingPolicy, arg5: object_t): Java.PendingResult;
      handleP(arg0: string_t, arg1: string_t, arg2: string_t, arg3: object_t, arg4: Java.FieldNamingPolicy, arg5: object_t): Promise<Java.PendingResult>;
      // public abstract void com.google.maps.GeoApiContext$RequestHandler.setConnectTimeout(long,java.util.concurrent.TimeUnit)
      setConnectTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      setConnectTimeout(arg0: object_t, arg1: object_t): void;
      setConnectTimeoutP(arg0: object_t, arg1: object_t): Promise<void>;
      // public abstract void com.google.maps.GeoApiContext$RequestHandler.setProxy(java.net.Proxy)
      setProxyA(arg0: object_t, cb: Callback<void>): void;
      setProxy(arg0: object_t): void;
      setProxyP(arg0: object_t): Promise<void>;
      // public abstract void com.google.maps.GeoApiContext$RequestHandler.setQueriesPerSecond(int,int)
      setQueriesPerSecondA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      setQueriesPerSecond(arg0: object_t, arg1: object_t): void;
      setQueriesPerSecondP(arg0: object_t, arg1: object_t): Promise<void>;
      // public abstract void com.google.maps.GeoApiContext$RequestHandler.setQueriesPerSecond(int)
      setQueriesPerSecondA(arg0: object_t, cb: Callback<void>): void;
      setQueriesPerSecond(arg0: object_t): void;
      setQueriesPerSecondP(arg0: object_t): Promise<void>;
      // public abstract void com.google.maps.GeoApiContext$RequestHandler.setReadTimeout(long,java.util.concurrent.TimeUnit)
      setReadTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      setReadTimeout(arg0: object_t, arg1: object_t): void;
      setReadTimeoutP(arg0: object_t, arg1: object_t): Promise<void>;
      // public abstract void com.google.maps.GeoApiContext$RequestHandler.setWriteTimeout(long,java.util.concurrent.TimeUnit)
      setWriteTimeoutA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      setWriteTimeout(arg0: object_t, arg1: object_t): void;
      setWriteTimeoutP(arg0: object_t, arg1: object_t): Promise<void>;
    }
    export module GeoApiContext$RequestHandler {
      export interface Static {
        class: Java.Object;
      }
    }
  }

  export module com.google.maps.model {
    export interface AddressComponent extends Java.java.lang.Object {
      longName: string;
      shortName: string;
      types: Java.AddressComponentType[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module AddressComponent {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.AddressComponent;
      }
    }
  }

  export module com.google.maps.model {
    export interface AddressComponentType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String com.google.maps.model.AddressComponentType.toCanonicalLiteral()
      toCanonicalLiteralA( cb: Callback<string>): void;
      toCanonicalLiteral(): string;
      toCanonicalLiteralP(): Promise<string>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module AddressComponentType {
      export interface Static {
        STREET_ADDRESS: Java.AddressComponentType;
        ROUTE: Java.AddressComponentType;
        INTERSECTION: Java.AddressComponentType;
        POLITICAL: Java.AddressComponentType;
        COUNTRY: Java.AddressComponentType;
        ADMINISTRATIVE_AREA_LEVEL_1: Java.AddressComponentType;
        ADMINISTRATIVE_AREA_LEVEL_2: Java.AddressComponentType;
        ADMINISTRATIVE_AREA_LEVEL_3: Java.AddressComponentType;
        ADMINISTRATIVE_AREA_LEVEL_4: Java.AddressComponentType;
        ADMINISTRATIVE_AREA_LEVEL_5: Java.AddressComponentType;
        COLLOQUIAL_AREA: Java.AddressComponentType;
        LOCALITY: Java.AddressComponentType;
        SUBLOCALITY: Java.AddressComponentType;
        SUBLOCALITY_LEVEL_1: Java.AddressComponentType;
        SUBLOCALITY_LEVEL_2: Java.AddressComponentType;
        SUBLOCALITY_LEVEL_3: Java.AddressComponentType;
        SUBLOCALITY_LEVEL_4: Java.AddressComponentType;
        SUBLOCALITY_LEVEL_5: Java.AddressComponentType;
        NEIGHBORHOOD: Java.AddressComponentType;
        PREMISE: Java.AddressComponentType;
        SUBPREMISE: Java.AddressComponentType;
        POSTAL_CODE: Java.AddressComponentType;
        POSTAL_CODE_PREFIX: Java.AddressComponentType;
        POSTAL_CODE_SUFFIX: Java.AddressComponentType;
        NATURAL_FEATURE: Java.AddressComponentType;
        AIRPORT: Java.AddressComponentType;
        PARK: Java.AddressComponentType;
        POINT_OF_INTEREST: Java.AddressComponentType;
        FLOOR: Java.AddressComponentType;
        ESTABLISHMENT: Java.AddressComponentType;
        PARKING: Java.AddressComponentType;
        POST_BOX: Java.AddressComponentType;
        POSTAL_TOWN: Java.AddressComponentType;
        ROOM: Java.AddressComponentType;
        STREET_NUMBER: Java.AddressComponentType;
        BUS_STATION: Java.AddressComponentType;
        TRAIN_STATION: Java.AddressComponentType;
        SUBWAY_STATION: Java.AddressComponentType;
        TRANSIT_STATION: Java.AddressComponentType;
        WARD: Java.AddressComponentType;
        UNKNOWN: Java.AddressComponentType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.AddressComponentType com.google.maps.model.AddressComponentType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.AddressComponentType>): void;
        valueOf(arg0: string_t): Java.AddressComponentType;
        valueOfP(arg0: string_t): Promise<Java.AddressComponentType>;
        // public static com.google.maps.model.AddressComponentType[] com.google.maps.model.AddressComponentType.values()
        valuesA( cb: Callback<Java.AddressComponentType[]>): void;
        values(): Java.AddressComponentType[];
        valuesP(): Promise<Java.AddressComponentType[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface AddressType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String com.google.maps.model.AddressType.toCanonicalLiteral()
      toCanonicalLiteralA( cb: Callback<string>): void;
      toCanonicalLiteral(): string;
      toCanonicalLiteralP(): Promise<string>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.AddressType.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module AddressType {
      export interface Static {
        STREET_ADDRESS: Java.AddressType;
        ROUTE: Java.AddressType;
        INTERSECTION: Java.AddressType;
        POLITICAL: Java.AddressType;
        COUNTRY: Java.AddressType;
        ADMINISTRATIVE_AREA_LEVEL_1: Java.AddressType;
        ADMINISTRATIVE_AREA_LEVEL_2: Java.AddressType;
        ADMINISTRATIVE_AREA_LEVEL_3: Java.AddressType;
        ADMINISTRATIVE_AREA_LEVEL_4: Java.AddressType;
        ADMINISTRATIVE_AREA_LEVEL_5: Java.AddressType;
        COLLOQUIAL_AREA: Java.AddressType;
        LOCALITY: Java.AddressType;
        SUBLOCALITY: Java.AddressType;
        SUBLOCALITY_LEVEL_1: Java.AddressType;
        SUBLOCALITY_LEVEL_2: Java.AddressType;
        SUBLOCALITY_LEVEL_3: Java.AddressType;
        SUBLOCALITY_LEVEL_4: Java.AddressType;
        SUBLOCALITY_LEVEL_5: Java.AddressType;
        NEIGHBORHOOD: Java.AddressType;
        PREMISE: Java.AddressType;
        SUBPREMISE: Java.AddressType;
        POSTAL_CODE: Java.AddressType;
        NATURAL_FEATURE: Java.AddressType;
        AIRPORT: Java.AddressType;
        UNIVERSITY: Java.AddressType;
        PARK: Java.AddressType;
        POINT_OF_INTEREST: Java.AddressType;
        ESTABLISHMENT: Java.AddressType;
        BUS_STATION: Java.AddressType;
        TRAIN_STATION: Java.AddressType;
        SUBWAY_STATION: Java.AddressType;
        TRANSIT_STATION: Java.AddressType;
        CHURCH: Java.AddressType;
        FINANCE: Java.AddressType;
        POST_OFFICE: Java.AddressType;
        PLACE_OF_WORSHIP: Java.AddressType;
        WARD: Java.AddressType;
        POSTAL_TOWN: Java.AddressType;
        UNKNOWN: Java.AddressType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.AddressType com.google.maps.model.AddressType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.AddressType>): void;
        valueOf(arg0: string_t): Java.AddressType;
        valueOfP(arg0: string_t): Promise<Java.AddressType>;
        // public static com.google.maps.model.AddressType[] com.google.maps.model.AddressType.values()
        valuesA( cb: Callback<Java.AddressType[]>): void;
        values(): Java.AddressType[];
        valuesP(): Promise<Java.AddressType[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface AutocompletePrediction extends Java.java.lang.Object {
      description: string;
      placeId: string;
      types: string[];
      terms: Java.AutocompletePrediction$Term[];
      matchedSubstrings: Java.AutocompletePrediction$MatchedSubstring[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module AutocompletePrediction {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.AutocompletePrediction;
      }
    }
  }

  export module com.google.maps.model {
    export interface AutocompletePrediction$MatchedSubstring extends Java.java.lang.Object {
      length: object_t;
      offset: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module AutocompletePrediction$MatchedSubstring {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.AutocompletePrediction$MatchedSubstring;
      }
    }
  }

  export module com.google.maps.model {
    export interface AutocompletePrediction$Term extends Java.java.lang.Object {
      offset: object_t;
      value: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module AutocompletePrediction$Term {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.AutocompletePrediction$Term;
      }
    }
  }

  export module com.google.maps.model {
    export interface Bounds extends Java.java.lang.Object {
      northeast: Java.LatLng;
      southwest: Java.LatLng;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Bounds {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Bounds;
      }
    }
  }

  export module com.google.maps.model {
    export interface ComponentFilter extends Java.java.lang.Object {
      component: string;
      value: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.ComponentFilter.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module ComponentFilter {
      export interface Static {
        class: Java.Object;
        // public static com.google.maps.model.ComponentFilter com.google.maps.model.ComponentFilter.administrativeArea(java.lang.String)
        administrativeAreaA(arg0: string_t, cb: Callback<Java.ComponentFilter>): void;
        administrativeArea(arg0: string_t): Java.ComponentFilter;
        administrativeAreaP(arg0: string_t): Promise<Java.ComponentFilter>;
        // public static com.google.maps.model.ComponentFilter com.google.maps.model.ComponentFilter.country(java.lang.String)
        countryA(arg0: string_t, cb: Callback<Java.ComponentFilter>): void;
        country(arg0: string_t): Java.ComponentFilter;
        countryP(arg0: string_t): Promise<Java.ComponentFilter>;
        // public static com.google.maps.model.ComponentFilter com.google.maps.model.ComponentFilter.locality(java.lang.String)
        localityA(arg0: string_t, cb: Callback<Java.ComponentFilter>): void;
        locality(arg0: string_t): Java.ComponentFilter;
        localityP(arg0: string_t): Promise<Java.ComponentFilter>;
        // public static com.google.maps.model.ComponentFilter com.google.maps.model.ComponentFilter.postalCode(java.lang.String)
        postalCodeA(arg0: string_t, cb: Callback<Java.ComponentFilter>): void;
        postalCode(arg0: string_t): Java.ComponentFilter;
        postalCodeP(arg0: string_t): Promise<Java.ComponentFilter>;
        // public static com.google.maps.model.ComponentFilter com.google.maps.model.ComponentFilter.route(java.lang.String)
        routeA(arg0: string_t, cb: Callback<Java.ComponentFilter>): void;
        route(arg0: string_t): Java.ComponentFilter;
        routeP(arg0: string_t): Promise<Java.ComponentFilter>;
      }
    }
  }

  export module com.google.maps.model {
    export interface DirectionsLeg extends Java.java.lang.Object {
      steps: Java.DirectionsStep[];
      distance: Java.Distance;
      duration: Java.Duration;
      durationInTraffic: Java.Duration;
      arrivalTime: object_t;
      departureTime: object_t;
      startLocation: Java.LatLng;
      endLocation: Java.LatLng;
      startAddress: string;
      endAddress: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DirectionsLeg {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.DirectionsLeg;
      }
    }
  }

  export module com.google.maps.model {
    export interface DirectionsResult extends Java.java.lang.Object {
      geocodedWaypoints: Java.GeocodedWaypoint[];
      routes: Java.DirectionsRoute[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DirectionsResult {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.DirectionsResult;
      }
    }
  }

  export module com.google.maps.model {
    export interface DirectionsRoute extends Java.java.lang.Object {
      summary: string;
      legs: Java.DirectionsLeg[];
      waypointOrder: object_t[];
      overviewPolyline: Java.EncodedPolyline;
      bounds: Java.Bounds;
      copyrights: string;
      fare: Java.Fare;
      warnings: string[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DirectionsRoute {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.DirectionsRoute;
      }
    }
  }

  export module com.google.maps.model {
    export interface DirectionsStep extends Java.java.lang.Object {
      htmlInstructions: string;
      distance: Java.Distance;
      duration: Java.Duration;
      startLocation: Java.LatLng;
      endLocation: Java.LatLng;
      steps: Java.DirectionsStep[];
      polyline: Java.EncodedPolyline;
      travelMode: Java.TravelMode;
      transitDetails: Java.TransitDetails;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DirectionsStep {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.DirectionsStep;
      }
    }
  }

  export module com.google.maps.model {
    export interface Distance extends Java.java.lang.Object {
      inMeters: object_t;
      humanReadable: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Distance {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Distance;
      }
    }
  }

  export module com.google.maps.model {
    export interface DistanceMatrix extends Java.java.lang.Object {
      originAddresses: string[];
      destinationAddresses: string[];
      rows: Java.DistanceMatrixRow[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DistanceMatrix {
      export interface Static {
        class: Java.Object;
        new (arg0: array_t<string_t>, arg1: array_t<string_t>, arg2: array_t<Java.DistanceMatrixRow>): com.google.maps.model.DistanceMatrix;
      }
    }
  }

  export module com.google.maps.model {
    export interface DistanceMatrixElement extends Java.java.lang.Object {
      status: Java.DistanceMatrixElementStatus;
      duration: Java.Duration;
      durationInTraffic: Java.Duration;
      distance: Java.Distance;
      fare: Java.Fare;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DistanceMatrixElement {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.DistanceMatrixElement;
      }
    }
  }

  export module com.google.maps.model {
    export interface DistanceMatrixElementStatus extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DistanceMatrixElementStatus {
      export interface Static {
        OK: Java.DistanceMatrixElementStatus;
        NOT_FOUND: Java.DistanceMatrixElementStatus;
        ZERO_RESULTS: Java.DistanceMatrixElementStatus;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.DistanceMatrixElementStatus com.google.maps.model.DistanceMatrixElementStatus.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.DistanceMatrixElementStatus>): void;
        valueOf(arg0: string_t): Java.DistanceMatrixElementStatus;
        valueOfP(arg0: string_t): Promise<Java.DistanceMatrixElementStatus>;
        // public static com.google.maps.model.DistanceMatrixElementStatus[] com.google.maps.model.DistanceMatrixElementStatus.values()
        valuesA( cb: Callback<Java.DistanceMatrixElementStatus[]>): void;
        values(): Java.DistanceMatrixElementStatus[];
        valuesP(): Promise<Java.DistanceMatrixElementStatus[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface DistanceMatrixRow extends Java.java.lang.Object {
      elements: Java.DistanceMatrixElement[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module DistanceMatrixRow {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.DistanceMatrixRow;
      }
    }
  }

  export module com.google.maps.model {
    export interface Duration extends Java.java.lang.Object {
      inSeconds: object_t;
      humanReadable: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Duration {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Duration;
      }
    }
  }

  export module com.google.maps.model {
    export interface ElevationResult extends Java.java.lang.Object {
      elevation: object_t;
      location: Java.LatLng;
      resolution: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module ElevationResult {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.ElevationResult;
      }
    }
  }

  export module com.google.maps.model {
    export interface EncodedPolyline extends Java.java.lang.Object {
      // public java.util.List<com.google.maps.model.LatLng> com.google.maps.model.EncodedPolyline.decodePath()
      decodePathA( cb: Callback<object_t>): void;
      decodePath(): object_t;
      decodePathP(): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public java.lang.String com.google.maps.model.EncodedPolyline.getEncodedPath()
      getEncodedPathA( cb: Callback<string>): void;
      getEncodedPath(): string;
      getEncodedPathP(): Promise<string>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module EncodedPolyline {
      export interface Static {
        class: Java.Object;
        new (arg0: string_t): com.google.maps.model.EncodedPolyline;
        new (arg0: object_t): com.google.maps.model.EncodedPolyline;
      }
    }
  }

  export module com.google.maps.model {
    export interface Fare extends Java.java.lang.Object {
      currency: object_t;
      value: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Fare {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Fare;
      }
    }
  }

  export module com.google.maps.model {
    export interface GeocodedWaypoint extends Java.java.lang.Object {
      geocoderStatus: Java.GeocodedWaypointStatus;
      partialMatch: object_t;
      placeId: string;
      types: Java.AddressType[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module GeocodedWaypoint {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.GeocodedWaypoint;
      }
    }
  }

  export module com.google.maps.model {
    export interface GeocodedWaypointStatus extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module GeocodedWaypointStatus {
      export interface Static {
        OK: Java.GeocodedWaypointStatus;
        ZERO_RESULTS: Java.GeocodedWaypointStatus;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.GeocodedWaypointStatus com.google.maps.model.GeocodedWaypointStatus.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.GeocodedWaypointStatus>): void;
        valueOf(arg0: string_t): Java.GeocodedWaypointStatus;
        valueOfP(arg0: string_t): Promise<Java.GeocodedWaypointStatus>;
        // public static com.google.maps.model.GeocodedWaypointStatus[] com.google.maps.model.GeocodedWaypointStatus.values()
        valuesA( cb: Callback<Java.GeocodedWaypointStatus[]>): void;
        values(): Java.GeocodedWaypointStatus[];
        valuesP(): Promise<Java.GeocodedWaypointStatus[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface GeocodingResult extends Java.java.lang.Object {
      addressComponents: Java.AddressComponent[];
      formattedAddress: string;
      postcodeLocalities: string[];
      geometry: Java.Geometry;
      types: Java.AddressType[];
      partialMatch: object_t;
      placeId: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module GeocodingResult {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.GeocodingResult;
      }
    }
  }

  export module com.google.maps.model {
    export interface Geometry extends Java.java.lang.Object {
      bounds: Java.Bounds;
      location: Java.LatLng;
      locationType: Java.LocationType;
      viewport: Java.Bounds;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Geometry {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Geometry;
      }
    }
  }

  export module com.google.maps.model {
    export interface LatLng extends Java.java.lang.Object {
      lat: object_t;
      lng: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.LatLng.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module LatLng {
      export interface Static {
        class: Java.Object;
        new (arg0: object_t, arg1: object_t): com.google.maps.model.LatLng;
      }
    }
  }

  export module com.google.maps.model {
    export interface LocationType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.LocationType.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module LocationType {
      export interface Static {
        ROOFTOP: Java.LocationType;
        RANGE_INTERPOLATED: Java.LocationType;
        GEOMETRIC_CENTER: Java.LocationType;
        APPROXIMATE: Java.LocationType;
        UNKNOWN: Java.LocationType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.LocationType com.google.maps.model.LocationType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.LocationType>): void;
        valueOf(arg0: string_t): Java.LocationType;
        valueOfP(arg0: string_t): Promise<Java.LocationType>;
        // public static com.google.maps.model.LocationType[] com.google.maps.model.LocationType.values()
        valuesA( cb: Callback<Java.LocationType[]>): void;
        values(): Java.LocationType[];
        valuesP(): Promise<Java.LocationType[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface OpeningHours extends Java.java.lang.Object {
      openNow: object_t;
      periods: Java.OpeningHours$Period[];
      weekdayText: string[];
      permanentlyClosed: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module OpeningHours {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.OpeningHours;
      }
    }
  }

  export module com.google.maps.model {
    export interface OpeningHours$Period extends Java.java.lang.Object {
      open: Java.OpeningHours$Period$OpenClose;
      close: Java.OpeningHours$Period$OpenClose;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module OpeningHours$Period {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.OpeningHours$Period;
      }
    }
  }

  export module com.google.maps.model {
    export interface OpeningHours$Period$OpenClose extends Java.java.lang.Object {
      day: Java.OpeningHours$Period$OpenClose$DayOfWeek;
      time: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module OpeningHours$Period$OpenClose {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.OpeningHours$Period$OpenClose;
      }
    }
  }

  export module com.google.maps.model {
    export interface OpeningHours$Period$OpenClose$DayOfWeek extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module OpeningHours$Period$OpenClose$DayOfWeek {
      export interface Static {
        SUNDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        MONDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        TUESDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        WEDNESDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        THURSDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        FRIDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        SATURDAY: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        UNKNOWN: Java.OpeningHours$Period$OpenClose$DayOfWeek;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.OpeningHours$Period$OpenClose$DayOfWeek>): void;
        valueOf(arg0: string_t): Java.OpeningHours$Period$OpenClose$DayOfWeek;
        valueOfP(arg0: string_t): Promise<Java.OpeningHours$Period$OpenClose$DayOfWeek>;
        // public static com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek[] com.google.maps.model.OpeningHours$Period$OpenClose$DayOfWeek.values()
        valuesA( cb: Callback<Java.OpeningHours$Period$OpenClose$DayOfWeek[]>): void;
        values(): Java.OpeningHours$Period$OpenClose$DayOfWeek[];
        valuesP(): Promise<Java.OpeningHours$Period$OpenClose$DayOfWeek[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface Photo extends Java.java.lang.Object {
      photoReference: string;
      height: object_t;
      width: object_t;
      htmlAttributions: string[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Photo {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Photo;
      }
    }
  }

  export module com.google.maps.model {
    export interface PhotoResult extends Java.java.lang.Object {
      imageData: object_t[];
      contentType: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PhotoResult {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PhotoResult;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceAutocompleteType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.PlaceAutocompleteType.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceAutocompleteType {
      export interface Static {
        GEOCODE: Java.PlaceAutocompleteType;
        ADDRESS: Java.PlaceAutocompleteType;
        ESTABLISHMENT: Java.PlaceAutocompleteType;
        REGIONS: Java.PlaceAutocompleteType;
        CITIES: Java.PlaceAutocompleteType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.PlaceAutocompleteType com.google.maps.model.PlaceAutocompleteType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.PlaceAutocompleteType>): void;
        valueOf(arg0: string_t): Java.PlaceAutocompleteType;
        valueOfP(arg0: string_t): Promise<Java.PlaceAutocompleteType>;
        // public static com.google.maps.model.PlaceAutocompleteType[] com.google.maps.model.PlaceAutocompleteType.values()
        valuesA( cb: Callback<Java.PlaceAutocompleteType[]>): void;
        values(): Java.PlaceAutocompleteType[];
        valuesP(): Promise<Java.PlaceAutocompleteType[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceDetails extends Java.java.lang.Object {
      addressComponents: Java.AddressComponent[];
      formattedAddress: string;
      formattedPhoneNumber: string;
      geometry: Java.Geometry;
      icon: object_t;
      internationalPhoneNumber: string;
      name: string;
      openingHours: Java.OpeningHours;
      photos: Java.Photo[];
      placeId: string;
      scope: Java.PlaceIdScope;
      altIds: Java.PlaceDetails$AlternatePlaceIds[];
      priceLevel: Java.PriceLevel;
      rating: object_t;
      reviews: Java.PlaceDetails$Review[];
      types: string[];
      url: object_t;
      utcOffset: object_t;
      vicinity: string;
      website: object_t;
      htmlAttributions: string[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceDetails {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PlaceDetails;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceDetails$AlternatePlaceIds extends Java.java.lang.Object {
      placeId: string;
      scope: Java.PlaceIdScope;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceDetails$AlternatePlaceIds {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PlaceDetails$AlternatePlaceIds;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceDetails$Review extends Java.java.lang.Object {
      aspects: Java.PlaceDetails$Review$AspectRating[];
      authorName: string;
      authorUrl: object_t;
      language: string;
      rating: object_t;
      text: string;
      time: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceDetails$Review {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PlaceDetails$Review;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceDetails$Review$AspectRating extends Java.java.lang.Object {
      type: Java.PlaceDetails$Review$AspectRating$RatingType;
      rating: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceDetails$Review$AspectRating {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PlaceDetails$Review$AspectRating;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceDetails$Review$AspectRating$RatingType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceDetails$Review$AspectRating$RatingType {
      export interface Static {
        APPEAL: Java.PlaceDetails$Review$AspectRating$RatingType;
        ATMOSPHERE: Java.PlaceDetails$Review$AspectRating$RatingType;
        DECOR: Java.PlaceDetails$Review$AspectRating$RatingType;
        FACILITIES: Java.PlaceDetails$Review$AspectRating$RatingType;
        FOOD: Java.PlaceDetails$Review$AspectRating$RatingType;
        OVERALL: Java.PlaceDetails$Review$AspectRating$RatingType;
        QUALITY: Java.PlaceDetails$Review$AspectRating$RatingType;
        SERVICE: Java.PlaceDetails$Review$AspectRating$RatingType;
        UNKNOWN: Java.PlaceDetails$Review$AspectRating$RatingType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.PlaceDetails$Review$AspectRating$RatingType>): void;
        valueOf(arg0: string_t): Java.PlaceDetails$Review$AspectRating$RatingType;
        valueOfP(arg0: string_t): Promise<Java.PlaceDetails$Review$AspectRating$RatingType>;
        // public static com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType[] com.google.maps.model.PlaceDetails$Review$AspectRating$RatingType.values()
        valuesA( cb: Callback<Java.PlaceDetails$Review$AspectRating$RatingType[]>): void;
        values(): Java.PlaceDetails$Review$AspectRating$RatingType[];
        valuesP(): Promise<Java.PlaceDetails$Review$AspectRating$RatingType[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceIdScope extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceIdScope {
      export interface Static {
        APP: Java.PlaceIdScope;
        GOOGLE: Java.PlaceIdScope;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.PlaceIdScope com.google.maps.model.PlaceIdScope.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.PlaceIdScope>): void;
        valueOf(arg0: string_t): Java.PlaceIdScope;
        valueOfP(arg0: string_t): Promise<Java.PlaceIdScope>;
        // public static com.google.maps.model.PlaceIdScope[] com.google.maps.model.PlaceIdScope.values()
        valuesA( cb: Callback<Java.PlaceIdScope[]>): void;
        values(): Java.PlaceIdScope[];
        valuesP(): Promise<Java.PlaceIdScope[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlacesSearchResponse extends Java.java.lang.Object {
      results: Java.PlacesSearchResult[];
      htmlAttributions: string[];
      nextPageToken: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlacesSearchResponse {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PlacesSearchResponse;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlacesSearchResult extends Java.java.lang.Object {
      formattedAddress: string;
      geometry: Java.Geometry;
      name: string;
      icon: object_t;
      placeId: string;
      scope: Java.PlaceIdScope;
      rating: object_t;
      types: string[];
      openingHours: Java.OpeningHours;
      photos: Java.Photo[];
      vicinity: string;
      permanentlyClosed: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlacesSearchResult {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.PlacesSearchResult;
      }
    }
  }

  export module com.google.maps.model {
    export interface PlaceType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.PlaceType.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PlaceType {
      export interface Static {
        ACCOUNTING: Java.PlaceType;
        AIRPORT: Java.PlaceType;
        AMUSEMENT_PARK: Java.PlaceType;
        AQUARIUM: Java.PlaceType;
        ART_GALLERY: Java.PlaceType;
        ATM: Java.PlaceType;
        BAKERY: Java.PlaceType;
        BANK: Java.PlaceType;
        BAR: Java.PlaceType;
        BEAUTY_SALON: Java.PlaceType;
        BICYCLE_STORE: Java.PlaceType;
        BOOK_STORE: Java.PlaceType;
        BOWLING_ALLEY: Java.PlaceType;
        BUS_STATION: Java.PlaceType;
        CAFE: Java.PlaceType;
        CAMPGROUND: Java.PlaceType;
        CAR_DEALER: Java.PlaceType;
        CAR_RENTAL: Java.PlaceType;
        CAR_REPAIR: Java.PlaceType;
        CAR_WASH: Java.PlaceType;
        CASINO: Java.PlaceType;
        CEMETERY: Java.PlaceType;
        CHURCH: Java.PlaceType;
        CITY_HALL: Java.PlaceType;
        CLOTHING_STORE: Java.PlaceType;
        CONVENIENCE_STORE: Java.PlaceType;
        COURTHOUSE: Java.PlaceType;
        DENTIST: Java.PlaceType;
        DEPARTMENT_STORE: Java.PlaceType;
        DOCTOR: Java.PlaceType;
        ELECTRICIAN: Java.PlaceType;
        ELECTRONICS_STORE: Java.PlaceType;
        EMBASSY: Java.PlaceType;
        ESTABLISHMENT: Java.PlaceType;
        FINANCE: Java.PlaceType;
        FIRE_STATION: Java.PlaceType;
        FLORIST: Java.PlaceType;
        FOOD: Java.PlaceType;
        FUNERAL_HOME: Java.PlaceType;
        FURNITURE_STORE: Java.PlaceType;
        GAS_STATION: Java.PlaceType;
        GENERAL_CONTRACTOR: Java.PlaceType;
        GROCERY_OR_SUPERMARKET: Java.PlaceType;
        GYM: Java.PlaceType;
        HAIR_CARE: Java.PlaceType;
        HARDWARE_STORE: Java.PlaceType;
        HEALTH: Java.PlaceType;
        HINDU_TEMPLE: Java.PlaceType;
        HOME_GOODS_STORE: Java.PlaceType;
        HOSPITAL: Java.PlaceType;
        INSURANCE_AGENCY: Java.PlaceType;
        JEWELRY_STORE: Java.PlaceType;
        LAUNDRY: Java.PlaceType;
        LAWYER: Java.PlaceType;
        LIBRARY: Java.PlaceType;
        LIQUOR_STORE: Java.PlaceType;
        LOCAL_GOVERNMENT_OFFICE: Java.PlaceType;
        LOCKSMITH: Java.PlaceType;
        LODGING: Java.PlaceType;
        MEAL_DELIVERY: Java.PlaceType;
        MEAL_TAKEAWAY: Java.PlaceType;
        MOSQUE: Java.PlaceType;
        MOVIE_RENTAL: Java.PlaceType;
        MOVIE_THEATER: Java.PlaceType;
        MOVING_COMPANY: Java.PlaceType;
        MUSEUM: Java.PlaceType;
        NIGHT_CLUB: Java.PlaceType;
        PAINTER: Java.PlaceType;
        PARK: Java.PlaceType;
        PARKING: Java.PlaceType;
        PET_STORE: Java.PlaceType;
        PHARMACY: Java.PlaceType;
        PHYSIOTHERAPIST: Java.PlaceType;
        PLACE_OF_WORSHIP: Java.PlaceType;
        PLUMBER: Java.PlaceType;
        POLICE: Java.PlaceType;
        POST_OFFICE: Java.PlaceType;
        REAL_ESTATE_AGENCY: Java.PlaceType;
        RESTAURANT: Java.PlaceType;
        ROOFING_CONTRACTOR: Java.PlaceType;
        RV_PARK: Java.PlaceType;
        SCHOOL: Java.PlaceType;
        SHOE_STORE: Java.PlaceType;
        SHOPPING_MALL: Java.PlaceType;
        SPA: Java.PlaceType;
        STADIUM: Java.PlaceType;
        STORAGE: Java.PlaceType;
        STORE: Java.PlaceType;
        SUBWAY_STATION: Java.PlaceType;
        SYNAGOGUE: Java.PlaceType;
        TAXI_STAND: Java.PlaceType;
        TRAIN_STATION: Java.PlaceType;
        TRAVEL_AGENCY: Java.PlaceType;
        UNIVERSITY: Java.PlaceType;
        VETERINARY_CARE: Java.PlaceType;
        ZOO: Java.PlaceType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.PlaceType com.google.maps.model.PlaceType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.PlaceType>): void;
        valueOf(arg0: string_t): Java.PlaceType;
        valueOfP(arg0: string_t): Promise<Java.PlaceType>;
        // public static com.google.maps.model.PlaceType[] com.google.maps.model.PlaceType.values()
        valuesA( cb: Callback<Java.PlaceType[]>): void;
        values(): Java.PlaceType[];
        valuesP(): Promise<Java.PlaceType[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface PriceLevel extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.PriceLevel.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module PriceLevel {
      export interface Static {
        FREE: Java.PriceLevel;
        INEXPENSIVE: Java.PriceLevel;
        MODERATE: Java.PriceLevel;
        EXPENSIVE: Java.PriceLevel;
        VERY_EXPENSIVE: Java.PriceLevel;
        UNKNOWN: Java.PriceLevel;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.PriceLevel com.google.maps.model.PriceLevel.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.PriceLevel>): void;
        valueOf(arg0: string_t): Java.PriceLevel;
        valueOfP(arg0: string_t): Promise<Java.PriceLevel>;
        // public static com.google.maps.model.PriceLevel[] com.google.maps.model.PriceLevel.values()
        valuesA( cb: Callback<Java.PriceLevel[]>): void;
        values(): Java.PriceLevel[];
        valuesP(): Promise<Java.PriceLevel[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface RankBy extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.RankBy.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module RankBy {
      export interface Static {
        PROMINENCE: Java.RankBy;
        DISTANCE: Java.RankBy;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.RankBy com.google.maps.model.RankBy.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.RankBy>): void;
        valueOf(arg0: string_t): Java.RankBy;
        valueOfP(arg0: string_t): Promise<Java.RankBy>;
        // public static com.google.maps.model.RankBy[] com.google.maps.model.RankBy.values()
        valuesA( cb: Callback<Java.RankBy[]>): void;
        values(): Java.RankBy[];
        valuesP(): Promise<Java.RankBy[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface SnappedPoint extends Java.java.lang.Object {
      location: Java.LatLng;
      originalIndex: object_t;
      placeId: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module SnappedPoint {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.SnappedPoint;
      }
    }
  }

  export module com.google.maps.model {
    export interface SnappedSpeedLimitResponse extends Java.java.lang.Object {
      speedLimits: Java.SpeedLimit[];
      snappedPoints: Java.SnappedPoint[];
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module SnappedSpeedLimitResponse {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.SnappedSpeedLimitResponse;
      }
    }
  }

  export module com.google.maps.model {
    export interface SpeedLimit extends Java.java.lang.Object {
      placeId: string;
      speedLimit: object_t;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public long com.google.maps.model.SpeedLimit.speedLimitMph()
      speedLimitMphA( cb: Callback<object_t>): void;
      speedLimitMph(): object_t;
      speedLimitMphP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module SpeedLimit {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.SpeedLimit;
      }
    }
  }

  export module com.google.maps.model {
    export interface StopDetails extends Java.java.lang.Object {
      name: string;
      location: Java.LatLng;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module StopDetails {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.StopDetails;
      }
    }
  }

  export module com.google.maps.model {
    export interface TrafficModel extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.TrafficModel.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TrafficModel {
      export interface Static {
        BEST_GUESS: Java.TrafficModel;
        OPTIMISTIC: Java.TrafficModel;
        PESSIMISTIC: Java.TrafficModel;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.TrafficModel com.google.maps.model.TrafficModel.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.TrafficModel>): void;
        valueOf(arg0: string_t): Java.TrafficModel;
        valueOfP(arg0: string_t): Promise<Java.TrafficModel>;
        // public static com.google.maps.model.TrafficModel[] com.google.maps.model.TrafficModel.values()
        valuesA( cb: Callback<Java.TrafficModel[]>): void;
        values(): Java.TrafficModel[];
        valuesP(): Promise<Java.TrafficModel[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface TransitAgency extends Java.java.lang.Object {
      name: string;
      url: string;
      phone: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TransitAgency {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.TransitAgency;
      }
    }
  }

  export module com.google.maps.model {
    export interface TransitDetails extends Java.java.lang.Object {
      arrivalStop: Java.StopDetails;
      departureStop: Java.StopDetails;
      arrivalTime: object_t;
      departureTime: object_t;
      headsign: string;
      headway: object_t;
      numStops: object_t;
      line: Java.TransitLine;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TransitDetails {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.TransitDetails;
      }
    }
  }

  export module com.google.maps.model {
    export interface TransitLine extends Java.java.lang.Object {
      name: string;
      shortName: string;
      color: string;
      agencies: Java.TransitAgency[];
      url: string;
      icon: string;
      textColor: string;
      vehicle: Java.Vehicle;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TransitLine {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.TransitLine;
      }
    }
  }

  export module com.google.maps.model {
    export interface TransitMode extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.TransitMode.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TransitMode {
      export interface Static {
        BUS: Java.TransitMode;
        SUBWAY: Java.TransitMode;
        TRAIN: Java.TransitMode;
        TRAM: Java.TransitMode;
        RAIL: Java.TransitMode;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.TransitMode com.google.maps.model.TransitMode.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.TransitMode>): void;
        valueOf(arg0: string_t): Java.TransitMode;
        valueOfP(arg0: string_t): Promise<Java.TransitMode>;
        // public static com.google.maps.model.TransitMode[] com.google.maps.model.TransitMode.values()
        valuesA( cb: Callback<Java.TransitMode[]>): void;
        values(): Java.TransitMode[];
        valuesP(): Promise<Java.TransitMode[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface TransitRoutingPreference extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.TransitRoutingPreference.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TransitRoutingPreference {
      export interface Static {
        LESS_WALKING: Java.TransitRoutingPreference;
        FEWER_TRANSFERS: Java.TransitRoutingPreference;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.TransitRoutingPreference com.google.maps.model.TransitRoutingPreference.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.TransitRoutingPreference>): void;
        valueOf(arg0: string_t): Java.TransitRoutingPreference;
        valueOfP(arg0: string_t): Promise<Java.TransitRoutingPreference>;
        // public static com.google.maps.model.TransitRoutingPreference[] com.google.maps.model.TransitRoutingPreference.values()
        valuesA( cb: Callback<Java.TransitRoutingPreference[]>): void;
        values(): Java.TransitRoutingPreference[];
        valuesP(): Promise<Java.TransitRoutingPreference[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface TravelMode extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.TravelMode.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module TravelMode {
      export interface Static {
        DRIVING: Java.TravelMode;
        WALKING: Java.TravelMode;
        BICYCLING: Java.TravelMode;
        TRANSIT: Java.TravelMode;
        UNKNOWN: Java.TravelMode;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.TravelMode com.google.maps.model.TravelMode.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.TravelMode>): void;
        valueOf(arg0: string_t): Java.TravelMode;
        valueOfP(arg0: string_t): Promise<Java.TravelMode>;
        // public static com.google.maps.model.TravelMode[] com.google.maps.model.TravelMode.values()
        valuesA( cb: Callback<Java.TravelMode[]>): void;
        values(): Java.TravelMode[];
        valuesP(): Promise<Java.TravelMode[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface Unit extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String com.google.maps.model.Unit.toUrlValue()
      toUrlValueA( cb: Callback<string>): void;
      toUrlValue(): string;
      toUrlValueP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Unit {
      export interface Static {
        METRIC: Java.Unit;
        IMPERIAL: Java.Unit;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.Unit com.google.maps.model.Unit.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.Unit>): void;
        valueOf(arg0: string_t): Java.Unit;
        valueOfP(arg0: string_t): Promise<Java.Unit>;
        // public static com.google.maps.model.Unit[] com.google.maps.model.Unit.values()
        valuesA( cb: Callback<Java.Unit[]>): void;
        values(): Java.Unit[];
        valuesP(): Promise<Java.Unit[]>;
      }
    }
  }

  export module com.google.maps.model {
    export interface Vehicle extends Java.java.lang.Object {
      name: string;
      type: Java.VehicleType;
      icon: string;
      localIcon: string;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Vehicle {
      export interface Static {
        class: Java.Object;
        new (): com.google.maps.model.Vehicle;
      }
    }
  }

  export module com.google.maps.model {
    export interface VehicleType extends Java.java.lang.Object {
      // public int java.lang.Enum.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public final int java.lang.Enum.compareTo(E)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public final java.lang.Class<E> java.lang.Enum.getDeclaringClass()
      getDeclaringClassA( cb: Callback<object_t>): void;
      getDeclaringClass(): object_t;
      getDeclaringClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final java.lang.String java.lang.Enum.name()
      nameA( cb: Callback<string>): void;
      name(): string;
      nameP(): Promise<string>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public final int java.lang.Enum.ordinal()
      ordinalA( cb: Callback<object_t>): void;
      ordinal(): object_t;
      ordinalP(): Promise<object_t>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module VehicleType {
      export interface Static {
        RAIL: Java.VehicleType;
        METRO_RAIL: Java.VehicleType;
        SUBWAY: Java.VehicleType;
        TRAM: Java.VehicleType;
        MONORAIL: Java.VehicleType;
        HEAVY_RAIL: Java.VehicleType;
        COMMUTER_TRAIN: Java.VehicleType;
        HIGH_SPEED_TRAIN: Java.VehicleType;
        BUS: Java.VehicleType;
        INTERCITY_BUS: Java.VehicleType;
        TROLLEYBUS: Java.VehicleType;
        SHARE_TAXI: Java.VehicleType;
        FERRY: Java.VehicleType;
        CABLE_CAR: Java.VehicleType;
        GONDOLA_LIFT: Java.VehicleType;
        FUNICULAR: Java.VehicleType;
        OTHER: Java.VehicleType;
        class: Java.Object;
        // public static <T> T java.lang.Enum.valueOf(java.lang.Class<T>,java.lang.String)
        valueOfA(arg0: object_t, arg1: string_t, cb: Callback<object_t>): void;
        valueOf(arg0: object_t, arg1: string_t): object_t;
        valueOfP(arg0: object_t, arg1: string_t): Promise<object_t>;
        // public static com.google.maps.model.VehicleType com.google.maps.model.VehicleType.valueOf(java.lang.String)
        valueOfA(arg0: string_t, cb: Callback<Java.VehicleType>): void;
        valueOf(arg0: string_t): Java.VehicleType;
        valueOfP(arg0: string_t): Promise<Java.VehicleType>;
        // public static com.google.maps.model.VehicleType[] com.google.maps.model.VehicleType.values()
        valuesA( cb: Callback<Java.VehicleType[]>): void;
        values(): Java.VehicleType[];
        valuesP(): Promise<Java.VehicleType[]>;
      }
    }
  }

  export module com.google.maps {
    export interface PendingResult extends Java.java.lang.Object {
      // public abstract T com.google.maps.PendingResult.await() throws java.lang.Exception
      awaitA( cb: Callback<object_t>): void;
      await(): object_t;
      awaitP(): Promise<object_t>;
      // public abstract T com.google.maps.PendingResult.awaitIgnoreError()
      awaitIgnoreErrorA( cb: Callback<object_t>): void;
      awaitIgnoreError(): object_t;
      awaitIgnoreErrorP(): Promise<object_t>;
      // public abstract void com.google.maps.PendingResult.cancel()
      cancelA( cb: Callback<void>): void;
      cancel(): void;
      cancelP(): Promise<void>;
      // public abstract void com.google.maps.PendingResult.setCallback(com.google.maps.PendingResult.com.google.maps.PendingResult$Callback<T>)
      setCallbackA(arg0: Java.PendingResult$Callback, cb: Callback<void>): void;
      setCallback(arg0: Java.PendingResult$Callback): void;
      setCallbackP(arg0: Java.PendingResult$Callback): Promise<void>;
    }
    export module PendingResult {
      export interface Static {
        class: Java.Object;
      }
    }
  }

  export module com.google.maps {
    export interface PendingResult$Callback extends Java.java.lang.Object {
      // public abstract void com.google.maps.PendingResult$Callback.onFailure(java.lang.Throwable)
      onFailureA(arg0: object_t, cb: Callback<void>): void;
      onFailure(arg0: object_t): void;
      onFailureP(arg0: object_t): Promise<void>;
      // public abstract void com.google.maps.PendingResult$Callback.onResult(T)
      onResultA(arg0: object_t, cb: Callback<void>): void;
      onResult(arg0: object_t): void;
      onResultP(arg0: object_t): Promise<void>;
    }
    export module PendingResult$Callback {
      export interface Static {
        class: Java.Object;
      }
    }
  }

  export module java.lang {
    export interface Object  {
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module Object {
      export interface Static {
        class: Java.Object;
        new (): java.lang.Object;
      }
    }
  }

  export module java.lang {
    export interface String extends Java.java.lang.Object {
      // public char java.lang.String.charAt(int)
      charAtA(arg0: object_t, cb: Callback<object_t>): void;
      charAt(arg0: object_t): object_t;
      charAtP(arg0: object_t): Promise<object_t>;
      // public default java.util.stream.IntStream java.lang.CharSequence.chars()
      charsA( cb: Callback<object_t>): void;
      chars(): object_t;
      charsP(): Promise<object_t>;
      // public int java.lang.String.codePointAt(int)
      codePointAtA(arg0: object_t, cb: Callback<object_t>): void;
      codePointAt(arg0: object_t): object_t;
      codePointAtP(arg0: object_t): Promise<object_t>;
      // public int java.lang.String.codePointBefore(int)
      codePointBeforeA(arg0: object_t, cb: Callback<object_t>): void;
      codePointBefore(arg0: object_t): object_t;
      codePointBeforeP(arg0: object_t): Promise<object_t>;
      // public int java.lang.String.codePointCount(int,int)
      codePointCountA(arg0: object_t, arg1: object_t, cb: Callback<object_t>): void;
      codePointCount(arg0: object_t, arg1: object_t): object_t;
      codePointCountP(arg0: object_t, arg1: object_t): Promise<object_t>;
      // public default java.util.stream.IntStream java.lang.CharSequence.codePoints()
      codePointsA( cb: Callback<object_t>): void;
      codePoints(): object_t;
      codePointsP(): Promise<object_t>;
      // public int java.lang.String.compareTo(java.lang.String)
      compareToA(arg0: string_t, cb: Callback<object_t>): void;
      compareTo(arg0: string_t): object_t;
      compareToP(arg0: string_t): Promise<object_t>;
      // public int java.lang.String.compareTo(java.lang.Object)
      compareToA(arg0: object_t, cb: Callback<object_t>): void;
      compareTo(arg0: object_t): object_t;
      compareToP(arg0: object_t): Promise<object_t>;
      // public int java.lang.String.compareToIgnoreCase(java.lang.String)
      compareToIgnoreCaseA(arg0: string_t, cb: Callback<object_t>): void;
      compareToIgnoreCase(arg0: string_t): object_t;
      compareToIgnoreCaseP(arg0: string_t): Promise<object_t>;
      // public java.lang.String java.lang.String.concat(java.lang.String)
      concatA(arg0: string_t, cb: Callback<string>): void;
      concat(arg0: string_t): string;
      concatP(arg0: string_t): Promise<string>;
      // public boolean java.lang.String.contains(java.lang.CharSequence)
      containsA(arg0: object_t, cb: Callback<object_t>): void;
      contains(arg0: object_t): object_t;
      containsP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.String.contentEquals(java.lang.StringBuffer)
      contentEqualsA(arg0: object_t, cb: Callback<object_t>): void;
      contentEquals(arg0: object_t): object_t;
      contentEqualsP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.String.contentEquals(java.lang.CharSequence)
      contentEqualsA(arg0: object_t, cb: Callback<object_t>): void;
      contentEquals(arg0: object_t): object_t;
      contentEqualsP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.String.endsWith(java.lang.String)
      endsWithA(arg0: string_t, cb: Callback<object_t>): void;
      endsWith(arg0: string_t): object_t;
      endsWithP(arg0: string_t): Promise<object_t>;
      // public boolean java.lang.Object.equals(java.lang.Object)
      equalsA(arg0: object_t, cb: Callback<object_t>): void;
      equals(arg0: object_t): object_t;
      equalsP(arg0: object_t): Promise<object_t>;
      // public boolean java.lang.String.equalsIgnoreCase(java.lang.String)
      equalsIgnoreCaseA(arg0: string_t, cb: Callback<object_t>): void;
      equalsIgnoreCase(arg0: string_t): object_t;
      equalsIgnoreCaseP(arg0: string_t): Promise<object_t>;
      // public void java.lang.String.getBytes(int,int,byte[],int)
      getBytesA(arg0: object_t, arg1: object_t, arg2: object_array_t, arg3: object_t, cb: Callback<void>): void;
      getBytes(arg0: object_t, arg1: object_t, arg2: object_array_t, arg3: object_t): void;
      getBytesP(arg0: object_t, arg1: object_t, arg2: object_array_t, arg3: object_t): Promise<void>;
      // public byte[] java.lang.String.getBytes(java.nio.charset.Charset)
      getBytesA(arg0: object_t, cb: Callback<object_t[]>): void;
      getBytes(arg0: object_t): object_t[];
      getBytesP(arg0: object_t): Promise<object_t[]>;
      // public byte[] java.lang.String.getBytes(java.lang.String) throws java.io.UnsupportedEncodingException
      getBytesA(arg0: string_t, cb: Callback<object_t[]>): void;
      getBytes(arg0: string_t): object_t[];
      getBytesP(arg0: string_t): Promise<object_t[]>;
      // public byte[] java.lang.String.getBytes()
      getBytesA( cb: Callback<object_t[]>): void;
      getBytes(): object_t[];
      getBytesP(): Promise<object_t[]>;
      // public void java.lang.String.getChars(int,int,char[],int)
      getCharsA(arg0: object_t, arg1: object_t, arg2: object_array_t, arg3: object_t, cb: Callback<void>): void;
      getChars(arg0: object_t, arg1: object_t, arg2: object_array_t, arg3: object_t): void;
      getCharsP(arg0: object_t, arg1: object_t, arg2: object_array_t, arg3: object_t): Promise<void>;
      // public final native java.lang.Class<?> java.lang.Object.getClass()
      getClassA( cb: Callback<object_t>): void;
      getClass(): object_t;
      getClassP(): Promise<object_t>;
      // public native int java.lang.Object.hashCode()
      hashCodeA( cb: Callback<object_t>): void;
      hashCode(): object_t;
      hashCodeP(): Promise<object_t>;
      // public int java.lang.String.indexOf(java.lang.String,int)
      indexOfA(arg0: string_t, arg1: object_t, cb: Callback<object_t>): void;
      indexOf(arg0: string_t, arg1: object_t): object_t;
      indexOfP(arg0: string_t, arg1: object_t): Promise<object_t>;
      // public int java.lang.String.indexOf(int,int)
      indexOfA(arg0: object_t, arg1: object_t, cb: Callback<object_t>): void;
      indexOf(arg0: object_t, arg1: object_t): object_t;
      indexOfP(arg0: object_t, arg1: object_t): Promise<object_t>;
      // public int java.lang.String.indexOf(java.lang.String)
      indexOfA(arg0: string_t, cb: Callback<object_t>): void;
      indexOf(arg0: string_t): object_t;
      indexOfP(arg0: string_t): Promise<object_t>;
      // public int java.lang.String.indexOf(int)
      indexOfA(arg0: object_t, cb: Callback<object_t>): void;
      indexOf(arg0: object_t): object_t;
      indexOfP(arg0: object_t): Promise<object_t>;
      // public native java.lang.String java.lang.String.intern()
      internA( cb: Callback<string>): void;
      intern(): string;
      internP(): Promise<string>;
      // public boolean java.lang.String.isEmpty()
      isEmptyA( cb: Callback<object_t>): void;
      isEmpty(): object_t;
      isEmptyP(): Promise<object_t>;
      // public int java.lang.String.lastIndexOf(java.lang.String,int)
      lastIndexOfA(arg0: string_t, arg1: object_t, cb: Callback<object_t>): void;
      lastIndexOf(arg0: string_t, arg1: object_t): object_t;
      lastIndexOfP(arg0: string_t, arg1: object_t): Promise<object_t>;
      // public int java.lang.String.lastIndexOf(int,int)
      lastIndexOfA(arg0: object_t, arg1: object_t, cb: Callback<object_t>): void;
      lastIndexOf(arg0: object_t, arg1: object_t): object_t;
      lastIndexOfP(arg0: object_t, arg1: object_t): Promise<object_t>;
      // public int java.lang.String.lastIndexOf(java.lang.String)
      lastIndexOfA(arg0: string_t, cb: Callback<object_t>): void;
      lastIndexOf(arg0: string_t): object_t;
      lastIndexOfP(arg0: string_t): Promise<object_t>;
      // public int java.lang.String.lastIndexOf(int)
      lastIndexOfA(arg0: object_t, cb: Callback<object_t>): void;
      lastIndexOf(arg0: object_t): object_t;
      lastIndexOfP(arg0: object_t): Promise<object_t>;
      // public int java.lang.String.length()
      lengthA( cb: Callback<object_t>): void;
      length(): object_t;
      lengthP(): Promise<object_t>;
      // public boolean java.lang.String.matches(java.lang.String)
      matchesA(arg0: string_t, cb: Callback<object_t>): void;
      matches(arg0: string_t): object_t;
      matchesP(arg0: string_t): Promise<object_t>;
      // public final native void java.lang.Object.notify()
      notifyA( cb: Callback<void>): void;
      notify(): void;
      notifyP(): Promise<void>;
      // public final native void java.lang.Object.notifyAll()
      notifyAllA( cb: Callback<void>): void;
      notifyAll(): void;
      notifyAllP(): Promise<void>;
      // public int java.lang.String.offsetByCodePoints(int,int)
      offsetByCodePointsA(arg0: object_t, arg1: object_t, cb: Callback<object_t>): void;
      offsetByCodePoints(arg0: object_t, arg1: object_t): object_t;
      offsetByCodePointsP(arg0: object_t, arg1: object_t): Promise<object_t>;
      // public boolean java.lang.String.regionMatches(boolean,int,java.lang.String,int,int)
      regionMatchesA(arg0: object_t, arg1: object_t, arg2: string_t, arg3: object_t, arg4: object_t, cb: Callback<object_t>): void;
      regionMatches(arg0: object_t, arg1: object_t, arg2: string_t, arg3: object_t, arg4: object_t): object_t;
      regionMatchesP(arg0: object_t, arg1: object_t, arg2: string_t, arg3: object_t, arg4: object_t): Promise<object_t>;
      // public boolean java.lang.String.regionMatches(int,java.lang.String,int,int)
      regionMatchesA(arg0: object_t, arg1: string_t, arg2: object_t, arg3: object_t, cb: Callback<object_t>): void;
      regionMatches(arg0: object_t, arg1: string_t, arg2: object_t, arg3: object_t): object_t;
      regionMatchesP(arg0: object_t, arg1: string_t, arg2: object_t, arg3: object_t): Promise<object_t>;
      // public java.lang.String java.lang.String.replace(java.lang.CharSequence,java.lang.CharSequence)
      replaceA(arg0: object_t, arg1: object_t, cb: Callback<string>): void;
      replace(arg0: object_t, arg1: object_t): string;
      replaceP(arg0: object_t, arg1: object_t): Promise<string>;
      // public java.lang.String java.lang.String.replace(char,char)
      replaceA(arg0: object_t, arg1: object_t, cb: Callback<string>): void;
      replace(arg0: object_t, arg1: object_t): string;
      replaceP(arg0: object_t, arg1: object_t): Promise<string>;
      // public java.lang.String java.lang.String.replaceAll(java.lang.String,java.lang.String)
      replaceAllA(arg0: string_t, arg1: string_t, cb: Callback<string>): void;
      replaceAll(arg0: string_t, arg1: string_t): string;
      replaceAllP(arg0: string_t, arg1: string_t): Promise<string>;
      // public java.lang.String java.lang.String.replaceFirst(java.lang.String,java.lang.String)
      replaceFirstA(arg0: string_t, arg1: string_t, cb: Callback<string>): void;
      replaceFirst(arg0: string_t, arg1: string_t): string;
      replaceFirstP(arg0: string_t, arg1: string_t): Promise<string>;
      // public java.lang.String[] java.lang.String.split(java.lang.String,int)
      splitA(arg0: string_t, arg1: object_t, cb: Callback<string[]>): void;
      split(arg0: string_t, arg1: object_t): string[];
      splitP(arg0: string_t, arg1: object_t): Promise<string[]>;
      // public java.lang.String[] java.lang.String.split(java.lang.String)
      splitA(arg0: string_t, cb: Callback<string[]>): void;
      split(arg0: string_t): string[];
      splitP(arg0: string_t): Promise<string[]>;
      // public boolean java.lang.String.startsWith(java.lang.String,int)
      startsWithA(arg0: string_t, arg1: object_t, cb: Callback<object_t>): void;
      startsWith(arg0: string_t, arg1: object_t): object_t;
      startsWithP(arg0: string_t, arg1: object_t): Promise<object_t>;
      // public boolean java.lang.String.startsWith(java.lang.String)
      startsWithA(arg0: string_t, cb: Callback<object_t>): void;
      startsWith(arg0: string_t): object_t;
      startsWithP(arg0: string_t): Promise<object_t>;
      // public java.lang.CharSequence java.lang.String.subSequence(int,int)
      subSequenceA(arg0: object_t, arg1: object_t, cb: Callback<object_t>): void;
      subSequence(arg0: object_t, arg1: object_t): object_t;
      subSequenceP(arg0: object_t, arg1: object_t): Promise<object_t>;
      // public java.lang.String java.lang.String.substring(int,int)
      substringA(arg0: object_t, arg1: object_t, cb: Callback<string>): void;
      substring(arg0: object_t, arg1: object_t): string;
      substringP(arg0: object_t, arg1: object_t): Promise<string>;
      // public java.lang.String java.lang.String.substring(int)
      substringA(arg0: object_t, cb: Callback<string>): void;
      substring(arg0: object_t): string;
      substringP(arg0: object_t): Promise<string>;
      // public char[] java.lang.String.toCharArray()
      toCharArrayA( cb: Callback<object_t[]>): void;
      toCharArray(): object_t[];
      toCharArrayP(): Promise<object_t[]>;
      // public java.lang.String java.lang.String.toLowerCase(java.util.Locale)
      toLowerCaseA(arg0: object_t, cb: Callback<string>): void;
      toLowerCase(arg0: object_t): string;
      toLowerCaseP(arg0: object_t): Promise<string>;
      // public java.lang.String java.lang.String.toLowerCase()
      toLowerCaseA( cb: Callback<string>): void;
      toLowerCase(): string;
      toLowerCaseP(): Promise<string>;
      // public java.lang.String java.lang.Object.toString()
      toStringA( cb: Callback<string>): void;
      toString(): string;
      toStringP(): Promise<string>;
      // public java.lang.String java.lang.String.toUpperCase(java.util.Locale)
      toUpperCaseA(arg0: object_t, cb: Callback<string>): void;
      toUpperCase(arg0: object_t): string;
      toUpperCaseP(arg0: object_t): Promise<string>;
      // public java.lang.String java.lang.String.toUpperCase()
      toUpperCaseA( cb: Callback<string>): void;
      toUpperCase(): string;
      toUpperCaseP(): Promise<string>;
      // public java.lang.String java.lang.String.trim()
      trimA( cb: Callback<string>): void;
      trim(): string;
      trimP(): Promise<string>;
      // public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
      waitA(arg0: object_t, arg1: object_t, cb: Callback<void>): void;
      wait(arg0: object_t, arg1: object_t): void;
      waitP(arg0: object_t, arg1: object_t): Promise<void>;
      // public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
      waitA(arg0: object_t, cb: Callback<void>): void;
      wait(arg0: object_t): void;
      waitP(arg0: object_t): Promise<void>;
      // public final void java.lang.Object.wait() throws java.lang.InterruptedException
      waitA( cb: Callback<void>): void;
      wait(): void;
      waitP(): Promise<void>;
    }
    export module String {
      export interface Static {
        CASE_INSENSITIVE_ORDER: object_t;
        class: Java.Object;
        new (arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: string_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t, arg2: object_t, arg3: object_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t, arg2: object_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t, arg2: object_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t, arg2: object_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t): java.lang.String;
        new (arg0: object_array_t, arg1: string_t): java.lang.String;
        new (arg0: object_array_t, arg1: object_t): java.lang.String;
        new (arg0: object_t): java.lang.String;
        new (arg0: object_t): java.lang.String;
        new (arg0: string_t): java.lang.String;
        new (arg0: object_array_t): java.lang.String;
        new (arg0: object_array_t): java.lang.String;
        new (): java.lang.String;
        // public static java.lang.String java.lang.String.copyValueOf(char[],int,int)
        copyValueOfA(arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
        copyValueOf(arg0: object_array_t, arg1: object_t, arg2: object_t): string;
        copyValueOfP(arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.copyValueOf(char[])
        copyValueOfA(arg0: object_array_t, cb: Callback<string>): void;
        copyValueOf(arg0: object_array_t): string;
        copyValueOfP(arg0: object_array_t): Promise<string>;
        // public static java.lang.String java.lang.String.format(java.util.Locale,java.lang.String,java.lang.Object...)
        formatA(arg0: object_t, arg1: string_t, arg2: object_array_t, cb: Callback<string>): void;
        format(arg0: object_t, arg1: string_t, ...arg2: object_t[]): string;
        format(arg0: object_t, arg1: string_t, arg2: object_array_t): string;
        formatP(arg0: object_t, arg1: string_t, ...arg2: object_t[]): Promise<string>;
        formatP(arg0: object_t, arg1: string_t, arg2: object_array_t): Promise<string>;
        // public static java.lang.String java.lang.String.format(java.lang.String,java.lang.Object...)
        formatA(arg0: string_t, arg1: object_array_t, cb: Callback<string>): void;
        format(arg0: string_t, ...arg1: object_t[]): string;
        format(arg0: string_t, arg1: object_array_t): string;
        formatP(arg0: string_t, ...arg1: object_t[]): Promise<string>;
        formatP(arg0: string_t, arg1: object_array_t): Promise<string>;
        // public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.CharSequence...)
        joinA(arg0: object_t, arg1: object_array_t, cb: Callback<string>): void;
        join(arg0: object_t, ...arg1: object_t[]): string;
        join(arg0: object_t, arg1: object_array_t): string;
        joinP(arg0: object_t, ...arg1: object_t[]): Promise<string>;
        joinP(arg0: object_t, arg1: object_array_t): Promise<string>;
        // public static java.lang.String java.lang.String.join(java.lang.CharSequence,java.lang.Iterable<? extends java.lang.CharSequence>)
        joinA(arg0: object_t, arg1: object_t, cb: Callback<string>): void;
        join(arg0: object_t, arg1: object_t): string;
        joinP(arg0: object_t, arg1: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(char[],int,int)
        valueOfA(arg0: object_array_t, arg1: object_t, arg2: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_array_t, arg1: object_t, arg2: object_t): string;
        valueOfP(arg0: object_array_t, arg1: object_t, arg2: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(java.lang.Object)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(char[])
        valueOfA(arg0: object_array_t, cb: Callback<string>): void;
        valueOf(arg0: object_array_t): string;
        valueOfP(arg0: object_array_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(boolean)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(long)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(int)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(float)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(double)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
        // public static java.lang.String java.lang.String.valueOf(char)
        valueOfA(arg0: object_t, cb: Callback<string>): void;
        valueOf(arg0: object_t): string;
        valueOfP(arg0: object_t): Promise<string>;
      }
    }
  }



  // #### `function smellsLikeJavaObject(e: any)`
  // Returns true if the obj 'smells' like a Java object.
  // This is a light-weight test that will return false when `e` is clearly not a Java object,
  // but it may have false positives. To be certain, use `isJavaObject(e)` or `instanceOf(e, classname)` instead.
  function smellsLikeJavaObject(e: any): boolean {
    return _.isObject(e) && !_.isArray(e) ;
  }

  // #### `function isJavaObject(e: any)`
  // Returns true if the obj is a Java object.
  // Useful for determining the runtime type of object_t returned by many java methods.
  export function isJavaObject(e: any): boolean {
    return smellsLikeJavaObject(e) && _java.instanceOf(e, 'java.lang.Object');
  }

} // module Java
